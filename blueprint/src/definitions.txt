af:
    * arithmetic function
af.bernoulli_numbers:
    * Bernoulli numbers
af.divisor_function:
    * divisor function
af.multiplicative:
    * multiplicative
ag.abelian_surface:
    * abelian surface
ag.abelian_variety:
    * abelian variety
ag.affine_space:
    * Affine space
ag.arithmetic_genus:
    * arithmetic genus
ag.aut_group:
    * automorphism
    * automorphism group
ag.bad_prime:
    * prime of bad reduction
ag.base_change:
    * base change
ag.base_field:
    * base field
ag.bielliptic_curve:
    * bielliptic curve
    * bielliptic involution
ag.canonical_height:
    * canonical height
    * height pairing
ag.canonical_model:
    * canonical map
    * canonical model
ag.cluster_picture:
    * cluster picture
    * depth
    * relative depth
    * size
ag.cohen_macaulay_type:
    * Cohen-Macaulay
ag.complex_multiplication:
    * complex multiplication
ag.conductor:
    * conductor
ag.curve:
    * algebraic curve
ag.curve.genus:
    * algebraic genus
    * arithmetic genus
    * genus
    * geometric genus
ag.curve.smooth:
    * smooth
ag.cyclic_trigonal:
    * cyclic trigonal curve
    * trigonal automorphism
ag.dimension:
    * dimension
ag.endomorphism_algebra:
    * endomorphism algebra
ag.endomorphism_ring:
    * endomorphism
    * endomorphism ring
ag.geom_component:
    * geometric component
ag.geom_endomorphism_algebra:
    * geometric endomorphism algebra
ag.geom_endomorphism_ring:
    * geometric endomorphism ring
ag.geom_simple:
    * geometrically (or absolutely) simple
ag.gonality:
    * $k$-gonality
    * gonality
ag.gonality_geom:
    * $\bar{K}$-gonality
    * geometric gonality
ag.good_reduction:
    * bad reduction
    * good reduction
ag.holomorphic_euler_char:
    * holomorphic Euler characteristic
ag.hyperelliptic_curve:
    * Weierstrass model
    * conic
    * hyperelliptic curve
ag.irreducible:
    * geometrically irreducible
    * irreducible
ag.jacobian:
    * Jacobian
ag.minimal_field:
    * minimal field of definition
ag.mordell_weil:
    * Mordell-Weil group
    * Mordell-Weil rank
    * torsion subgroup
ag.plane_model:
    * plane model
    * singular
    * smooth
ag.potential_good_reduction:
    * potential good reduction
ag.primitive:
    * primitive
ag.projective_space:
    * Projective space
    * homogeneous coordinates
ag.quotient_curve:
    * quotient curve
ag.real_endomorphism_algebra:
    * real endomorphism algebra
ag.real_geom_endomorphism_algebra:
    * real geometric endomorphism algebra
ag.real_multiplication:
    * real multiplication
ag.regulator:
    * height pairing
    * regulator
ag.riemann_surface:
    * Riemann surface
ag.selmer_group:
    * $n$-Selmer group
ag.shimura_variety:
    * (connected) Shimura varieties
ag.simple:
    * simple
ag.singular_point:
    * non-singular
ag.splitting_field:
    * splitting field
ag.tate_shafarevich:
    * Tate-Shafarevich group
ag.torsor:
    * principal homogeneous space
    * torsor
ag.variety:
    * affine algebraic set
    * affine variety
    * algebraic varieties
    * defining ideal
    * projective algebraic set
    * projective variety
alg.bezout_matrix:
    * degree $n$ Bézout matrix
alg.binary_operation:
    * binary operation
alg.binary_operation.associative:
    * associative
alg.binary_operation.commutative:
    * commutative
alg.binary_operation.identity:
    * identity
    * the identity element
alg.binary_operation.inverse:
    * inverse
alg.symmetric_bilinear_form:
    * symmetric bilinear form
alg.symplectic_isomorphism:
    * symplectic isomorphism
artin:
    * Artin representation
artin.conductor:
    * conductor
artin.determinant:
    * determinant
artin.dimension:
    * dimension
artin.frobenius_schur_indicator:
    * Frobenius-Schur indicator
artin.galois_orbit:
    * Galois orbit
artin.gg_quotient:
    * image of the Artin representation
artin.number_field:
    * artin field
artin.parity:
    * even
    * odd
artin.permutation_container:
    * contains
artin.projective_field:
    * projective Artin field
artin.projective_image:
    * projective image
artin.projective_stem_field:
    * projective stem field
artin.ramified_primes:
    * ramified
artin.root_number:
    * root number
    * sign
artin.stem_field:
    * Artin stem field
artin.unramified_primes:
    * unramified
av.aut_group:
    * automorphism
    * automorphism group
av.decomposition:
    * isogeny factors
av.deligne_module:
    * Deligne module
av.endomorphism_field:
    * endomorphism field
av.fq.all_polarizations_product:
    * decomposable
    * indecomposable
av.fq.angle_rank:
    * angle corank
    * angle rank
av.fq.bass_zfv:
    * Bass
av.fq.conductor:
    * (relative) conductor
    * conductor
av.fq.conjugate_stable:
    * CM-involution
    * conjugate stable
av.fq.endomorphism_ring_notation:
    * $\#\mathrm{Pic}$
    * $\#\mathrm{weak} = 1 $
    * $\#\mathrm{weak}$
    * $\mathrm{index}$
    * $i$
    * notation
av.fq.frobenius_angles:
    * Frobenius angles
av.fq.group_structure:
    * rational $k$-points
av.fq.index_of_order:
    * index
av.fq.initial_coefficients:
    * do not include
av.fq.l-polynomial:
    * L-polynomial
av.fq.lmfdb_label:
    * $N :=[\mathcal{O}_{\mathbb{Q}[F]}:R]$
    * $d$
    * $g$
    * $i$
    * $j$
    * $k$
    * $q$
    * $w$
    * g.q.isog
    * g.q.isog.N.i
    * g.q.isog.N.i.w
    * g.q.isog.N.i.w.j
    * g.q.isog.N.i.w.j.d.k
    * isog
    * label
av.fq.maximal_zfv:
    * maximal
av.fq.newton_elevation:
    * almost ordinary
    * elevation
    * eligible
av.fq.number_field:
    * number field
av.fq.order:
    * maximal order
    * order
    * overorder
    * étale algebra
av.fq.ordinary:
    * ordinary
av.fq.p_rank:
    * $p$-corank
    * $p$-rank
av.fq.picard_group:
    * Picard group
av.fq.singular_dimensions:
    * invertible
    * locally principal
av.fq.singular_primes:
    * singular primes
    * singular support
av.fq.supersingular:
    * supersingular
av.fq.weak_equivalence_class:
    * weak equivalence class
av.fq.weil_polynomial:
    * Weil polynomial
    * characteristic polynomial
av.fq.zfv_index:
    * index
av.fq.zfv_real_index:
    * real index
av.fq.zfv_rel_disc_norm:
    * relative discriminant
av.galois_rep:
    * $\ell$-adic Galois representation
    * adelic Galois representation
    * mod-$\ell$ Galois representation
    * mod-$m$ Galois representation
av.geometrically_simple:
    * geometrically simple
av.geometrically_squarefree:
    * geometrically squarefree
av.is_product:
    * product abelian variety
av.isogeny:
    * isogenous
    * isogeny
av.isogeny_class:
    * isogeny class
av.polarization:
    * degree
    * kernel
    * polarization
av.potential_toric_rank:
    * potential toric rank
av.princ_polarizable:
    * principally polarizable
av.semiabelian_variety:
    * semiabelian variety
av.simple:
    * simple
av.squarefree:
    * squarefree
av.tate_module:
    * $p$-adic Tate module
av.theta_divisor:
    * symmetric
    * theta divisor
av.twist:
    * twist
av.weak_equivalence_class:
    * weakly equivalent
belyi.abc:
    * $(a,b,c)$ triple
belyi.base_field:
    * base field
belyi.degree:
    * degree
belyi.galmap:
    * belyi map
belyi.genus:
    * genus
belyi.geometry_type:
    * geometry type
belyi.group:
    * monodromy group
belyi.label:
    * label
belyi.num_orbits:
    * number of Galois orbits
belyi.orbit_size:
    * orbit size
belyi.passport:
    * passport
belyi.permutation_triple:
    * permutation triple
    * transitive
belyi.ramification_type:
    * ramification type
character.dirichlet:
    * dirichlet character
    * modulus
character.dirichlet.conductor:
    * conductor
character.dirichlet.conrey.index:
    * conrey index
    * index
character.dirichlet.conrey.primitive_generator:
    * conrey (primitive) generator
character.dirichlet.degree:
    * degree
character.dirichlet.field_cut_out:
    * fixed field
character.dirichlet.galois_orbit:
    * galois orbit
character.dirichlet.galois_orbit_index:
    * orbit index
character.dirichlet.galois_orbit_label:
    * label
character.dirichlet.gauss_sum:
    * gauss sum
character.dirichlet.group.generators:
    * generators
character.dirichlet.group.order:
    * order
character.dirichlet.group.structure:
    * structure
character.dirichlet.induce:
    * induced
character.dirichlet.jacobi_sum:
    * jacobi sum
character.dirichlet.jacobi_symbol:
    * jacobi symbol
    * law of quadratic reciprocity states
character.dirichlet.kloosterman_sum:
    * kloosterman sum
character.dirichlet.kronecker_symbol:
    * Kronecker symbol
character.dirichlet.legendre_symbol:
    * legendre symbol
character.dirichlet.minimal:
    * minimal
character.dirichlet.modulus:
    * dirichlet character
    * modulus
character.dirichlet.order:
    * order
character.dirichlet.parity:
    * parity
character.dirichlet.primitive:
    * primitive
character.dirichlet.principal:
    * principal
    * trivial
character.dirichlet.real:
    * real
character.dirichlet.value_field:
    * field of values
character.hecke:
    * Hecke character
character.unit_group:
    * underlying unit group
cmf:
    * modular form
cmf.analytic_conductor:
    * analytic conductor
cmf.analytic_rank:
    * analytic rank
cmf.artin_field:
    * artin field
cmf.artin_image:
    * Artin image
cmf.atkin-lehner:
    * Atkin-Lehner involution
cmf.bad_prime:
    * bad prime
    * good prime
cmf.character:
    * character
cmf.cm_form:
    * complex multiplication
cmf.coefficient_field:
    * coefficient field
    * hecke field
cmf.coefficient_ring:
    * Hecke ring
    * coefficient ring
cmf.congruence_subgroup:
    * congruence subgroup
    * level
    * principal congruence subgroup
cmf.cusp_form:
    * cusp form
cmf.decomposition.new.gamma0chi:
    * {{ knowl(mf.elliptic.newform, title=newform) }}
cmf.defining_polynomial:
    * defining polynomial
cmf.dimension:
    * dimension
    * relative dimension
cmf.distinguishing_primes:
    * distinguishes
cmf.dualform:
    * dual
cmf.eisenstein:
    * Eisenstein series
    * isotropy group
cmf.embedding:
    * embedding
cmf.embedding_label:
    * label
cmf.eta_quotient:
    * eta product
    * eta quotient
cmf.fouriercoefficients:
    * Fourier coefficients
    * Fourier expansion
cmf.fricke:
    * Fricke involution
cmf.galois_conjugate:
    * galois conjugate
cmf.galois_orbit:
    * Galois orbit
    * newform orbits
cmf.galois_representation:
    * galois representation
    * projective galois representation
cmf.hecke_operator:
    * Hecke operator
cmf.hecke_orbit:
    * Hecke orbit
cmf.hecke_ring_generators:
    * coefficient ring generator bound
cmf.heckecharpolys:
    * Hecke characteristic polynomial
cmf.inner_twist:
    * inner twists
cmf.inner_twist_count:
    * inner twist count
cmf.inner_twist_multiplicity:
    * multiplicity
cmf.label:
    * label
cmf.level:
    * level
cmf.maximal:
    * largest
    * maximal
cmf.minimal:
    * minimal
cmf.minimal_twist:
    * minimal twist
cmf.minus_space:
    * minus subspace
cmf.newform:
    * newform
cmf.newform_subspace:
    * newform subspace
cmf.newspace:
    * new subspace
    * old subspace
cmf.nontrivial_twist:
    * nontrivial
cmf.oldspace:
    * old
cmf.petersson_scalar_product:
    * Petersson scalar product
cmf.plus_space:
    * plus subspace
cmf.projective_field:
    * projective field
cmf.projective_image:
    * projective image
    * types
cmf.q-expansion:
    * $q$-expansion
cmf.relative_dimension:
    * relative dimension
cmf.rm_form:
    * real multiplication
cmf.satake_angles:
    * Satake angles
cmf.satake_parameters:
    * Satake parameters
cmf.sato_tate:
    * sato-tate group
cmf.self_twist:
    * self-twist
cmf.selfdual:
    * self dual
cmf.shimura_correspondence:
    * shimura correspondence
cmf.space:
    * space
cmf.space_trace_form:
    * trace form
cmf.stark_unit:
    * Stark unit
cmf.sturm_bound:
    * Sturm bound
cmf.sturm_bound_gamma1:
    * S
cmf.subspaces:
    * new subspace
    * old subspace
cmf.trace_bound:
    * trace bound
cmf.trace_form:
    * trace form
cmf.twist:
    * twist
    * twist class
    * twist equivalent
cmf.twist_minimal:
    * minimal twist
    * twist minimal
cmf.twist_multiplicity:
    * multiplicity
cmf.weight:
    * weight
combin.hasse_diagram:
    * Hasse diagram
crystals.crystal:
    * ($u_q(\mathfrak{g})$-)crystal
curve.highergenus.aut.braid_equivalence:
    * braid equivalent
    * braid operations
curve.highergenus.aut.branchpoints:
    * branch points
curve.highergenus.aut.dimension:
    * dimension
curve.highergenus.aut.full:
    * full group of automorphisms
curve.highergenus.aut.generatingvector:
    * generating vector
curve.highergenus.aut.generators:
    * standard generators
curve.highergenus.aut.group_action:
    * group $G$ acts on a compact Riemann surface $X$
curve.highergenus.aut.groupalgebradecomp:
    * group algebra decomposition
curve.highergenus.aut.monodromy:
    * (geometric) monodromy group
curve.highergenus.aut.quotientgenus:
    * quotient genus
curve.highergenus.aut.refinedpassport:
    * refined passport
curve.highergenus.aut.signature:
    * signature
curve.highergenus.aut.topological_equivalence:
    * topologically equivalent
doc.related_to:
    * related objects
dq.curve.highergenus.aut.source:
    * corresponding character(s)
    * dimension of the corresponding {{knowl(ag.shimura_variety, title=shimura variety)}}
    * equations
    * hyperelliptic or cyclic trigonal curves
    * {{knowl(ag.jacobian, title=jacobian variety)}} decomposition
dq.mf.hilbert.source:
    * M
ec:
    * elliptic curve
ec.additive_reduction:
    * additive reduction
ec.analytic_sha_order:
    * Tate-Shafarevich group
    * analytic order of Sha
ec.bad_reduction:
    * bad reduction
ec.base_change:
    * base change
ec.bsdconjecture:
    * BSD
    * BSD invariants
    * Birch and Swinnerton-Dyer
ec.canonical_height:
    * canonical height
    * height pairing
ec.complex_multiplication:
    * CM discriminant
    * complex multiplication
    * potential complex multiplication
ec.conductor:
    * conductor
    * conductor norm
ec.discriminant:
    * discriminant
ec.endomorphism:
    * endomorphism
ec.endomorphism_ring:
    * endomorphism ring
ec.galois_rep:
    * $\ell$-adic Galois representation
    * adelic Galois representation
    * mod-$\ell$ Galois representation
    * mod-$m$ Galois representation
ec.galois_rep_adelic_image:
    * genus
    * index
    * level
ec.galois_rep_modell_image:
    * A4
    * A5
    * B
    * Cn
    * Cs
    * G
    * Nn
    * Ns
    * S4
ec.geom_endomorphism_ring:
    * geometric endomorphism ring
ec.global_minimal_model:
    * global minimal model
ec.good_ordinary_reduction:
    * ordinary
    * ordinary reduction
ec.good_reduction:
    * everywhere good reduction
    * good reduction
ec.good_supersingular_reduction:
    * supersingular
    * supersingular reduction
ec.integral_model:
    * integral model
ec.invariants:
    * conductor norm
    * minimal discriminant norm
ec.isogeny:
    * cyclic
    * degree
    * endomorphisms
    * isogenous
    * isogeny
    * isogeny classes
ec.isogeny_class:
    * isogeny class (over a field $K$)
ec.isogeny_class_degree:
    * isogeny class degree
ec.isogeny_graph:
    * isogeny graph
ec.isogeny_matrix:
    * isogeny matrix
ec.isomorphism:
    * isomorphism
    * isomorphism classes
ec.j_invariant:
    * $j$-invariant
ec.kodaira_symbol:
    * kodaira symbol
ec.local_data:
    * local data
ec.local_minimal_discriminant:
    * local minimal discriminant
ec.local_minimal_model:
    * local minimal model
ec.maximal_elladic_galois_rep:
    * maximal
    * maximal prime
ec.maximal_galois_rep:
    * maximal
ec.minimal_discriminant:
    * minimal discriminant
ec.mordell_weil_group:
    * Mordell-Weil group
    * Mordell-Weil rank
ec.mordell_weil_theorem:
    * mordell-weil theorem
ec.multiplicative_reduction:
    * multiplicative reduction
ec.mw_generators:
    * Mordell-Weil generators
    * non-torsion generators
    * torsion generators
    * {{KNOWL('ec.mordell_weil_group', 'Mordell-Weil group')}}
ec.nonsplit_multiplicative_reduction:
    * non-split multiplicative reduction
ec.obstruction_class:
    * obstruction class
ec.padic_tate_module:
    * $p$-adic Tate module
ec.period:
    * global period
ec.potential_good_reduction:
    * potential good reduction
ec.q:
    * elliptic curve $E$ over $\mathbb{Q}$
ec.q.abc_quality:
    * $abc$ quality
    * quality
ec.q.analytic_rank:
    * analytic rank
ec.q.analytic_sha_order:
    * Analytic Order of Sha
    * Tate-Shafarevic group
ec.q.bsdconjecture:
    * Birch and Swinnerton-Dyer
ec.q.canonical_height:
    * canonical height
    * height pairing
ec.q.conductor:
    * conductor
ec.q.cremona_label:
    * Cremona label
ec.q.discriminant:
    * discriminant
ec.q.endomorphism_ring:
    * endomorphism ring
ec.q.faltings_height:
    * Faltings height
    * stable Faltings height
ec.q.faltings_ratio:
    * Faltings ratio
ec.q.frey:
    * Frey curve
    * Frey-Hellegouarch curve
ec.q.integral_points:
    * integral points
ec.q.j_invariant:
    * $j$-invariant
ec.q.kodaira_symbol:
    * kodaira symbol
ec.q.lmfdb_label:
    * LMFDB label
    * conductor
    * isogeny class index
    * isogeny class label
    * isomorphism class index
ec.q.manin_constant:
    * 154
    * Manin constant
ec.q.minimal_twist:
    * minimal quadratic twist
    * minimal quartic twist
    * minimal sextic twist
    * minimal twist
ec.q.minimal_weierstrass_equation:
    * minimal weierstrass equation
    * reduced minimal model
ec.q.modular_degree:
    * modular degree
ec.q.modular_parametrization:
    * modular parametrization
ec.q.naive_height:
    * naive height
ec.q.optimal:
    * optimal
ec.q.period_lattice:
    * N&eacute;ron lattice
    * period lattice
    * real period
ec.q.real_period:
    * homothetic
    * real period
    * the
ec.q.reduction_type:
    * additive reduction
    * bad reduction
    * cuspidal
    * good reduction
    * multiplicative reduction
    * nodal
    * non-split
    * ordinary
    * reduction type
    * split
    * supersingular
ec.q.regulator:
    * height pairing
    * regulator
ec.q.semistable:
    * semistable
ec.q.serre_invariants:
    * Serre conductor
    * Serre invariants
    * Serre weight
    * exceptional
ec.q.special_value:
    * special value
ec.q.szpiro_ratio:
    * Szpiro ratio
ec.q.torsion_growth:
    * primitive
    * torsion growth
ec.q.torsion_subgroup:
    * torsion subgroup
ec.q_curve:
    * -curve
ec.rank:
    * rank
ec.reduction:
    * {{KNOWL('ec.potential_good_reduction','potential good reduction')}}
    * {{KNOWL('ec.semistable','semistable')}}
ec.reduction_type:
    * additive reduction
    * multiplicative reduction
    * non-split multiplicative reduction
    * ordinary
    * reduction type
    * split multiplicative reduction
    * supersingular
ec.regulator:
    * height pairing
    * regulator
ec.ring:
    * elliptic curve
ec.scheme:
    * elliptic scheme
ec.semi_global_minimal_model:
    * semi-global minimal models
ec.semistable:
    * semistable
ec.simple_equation:
    * short Weierstrass model
    * simplified equation
ec.special_value:
    * leading coefficient
    * special value
ec.split_multiplicative_reduction:
    * split multiplicative reduction
ec.tamagawa_number:
    * tamagawa number
    * tamagawa product
ec.torsion_order:
    * torsion order
ec.torsion_subgroup:
    * torsion structure
    * torsion subgroup
ec.twists:
    * quadratic twists
    * quartic twists
    * sextic twists
    * twist
ec.weierstrass_coeffs:
    * Weierstrass coefficients
    * Weierstrass equation
    * Weierstrass model
ec.weierstrass_isomorphism:
    * isomorphic over $k$
    * weierstrass isomorphisms
field.finite.conway_polynomial:
    * Conway polynomials
g2c.abs_discriminant:
    * absolute discriminant
g2c.all_rational_points:
    * rational points
g2c.analytic_rank:
    * analytic rank
g2c.analytic_sha:
    * analytic order of Sha
g2c.aut_grp:
    * automorphism
    * automorphism group
    * hyperelliptic involution
g2c.bsd_invariants:
    * BSD formula
    * BSD invariants
g2c.conductor:
    * conductor
g2c.decomposition:
    * decompose
    * split
g2c.discriminant:
    * discriminant
g2c.end_alg:
    * complex multiplication
    * endomorphism algebra
    * real multiplication
g2c.g2_invariants:
    * G2-invariants
g2c.g2curve:
    * Weierstrass equation
g2c.galois_rep.non_maximal_primes:
    * nonmaximal primes
g2c.galois_rep_image:
    * 1p3
    * 2p2
    * ?
    * cusp
    * irred
    * nss
g2c.geom_aut_grp:
    * geometric automorphism group
g2c.geom_end_alg:
    * complex multiplication
    * geometric endomorphism algebra
    * quaternionic multiplication
    * real multiplication
g2c.geom_iso_class:
    * geometric isomorphism class
g2c.gl2type:
    * $\textbf{GL}_2$-type
g2c.good_reduction:
    * bad reduction
    * good reduction
g2c.hasse_weil_conjecture:
    * Hasse-Weil conjecture
g2c.igusa_clebsch_invariants:
    * Igusa-Clebsch invariants
g2c.igusa_invariants:
    * Igusa invariants
g2c.isogeny_class:
    * isogeny class
g2c.jac_end_lattice:
    * endomorphism lattice
g2c.known_rational_points:
    * known rational points
g2c.lfunction:
    * l-function
    * l-polynomial
g2c.local_invariants:
    * local invariants
g2c.locally_solvable:
    * locally solvable
g2c.maximal_galois_rep:
    * generic
    * maximal
g2c.minimal_equation:
    * minimal equation
g2c.mordell_weil_rank:
    * mordell-weil rank
g2c.mw_generator:
    * Mordell-Weil generators
    * Mumford representation
g2c.mw_generator_order:
    * order
g2c.num_rat_wpts:
    * Weierstrass points
g2c.paramodular_conjecture:
    * paramodular conjecture
g2c.real_period:
    * real period
g2c.regulator:
    * regulator
g2c.simple_equation:
    * simplified equation
g2c.st_group:
    * Sato-Tate group
g2c.st_group_identity_component:
    * component group
    * identity component
g2c.tamagawa:
    * Tamagawa number
    * Tamagawa product
g2c.torsion:
    * torsion subgroup
g2c.torsion_order:
    * torsion order
    * torsion primes
g2c.two_selmer_rank:
    * 2-Selmer rank
g2c.two_torsion_field:
    * 2-torsion field
gg.degree:
    * degree
gg.elusive_group:
    * elusive group
gg.galois_group:
    * Galois group
gg.generic_polynomial:
    * generic
gg.group_action_invariants:
    * degree
    * parity
    * primitive
    * resolvent fields
gg.index:
    * index
gg.int_modules:
    * indecomposable
    * integral representation
gg.invariants:
    * abelian
    * character table
    * cyclic
    * order
    * solvable
gg.malle_a:
    * Malle's constant
gg.other_representations:
    * siblings
gg.parity:
    * parity
gg.primitive:
    * primitive
gg.regular_extension:
    * regular
gg.resolvents:
    * resolvents
gg.subfields:
    * subfields
gg.subnormal_series:
    * subnormal series
gl2.borel:
    * B
    * B.a.b
    * Borel subgroup
gl2.cartan:
    * Cartan subgroup
    * extended Cartan subgroup
gl2.exceptional:
    * A4
    * A5
    * S4
    * exceptional subgroup
gl2.genus:
    * genus
gl2.index:
    * index
gl2.label:
    * RSZB label
gl2.level:
    * level
gl2.nonsplit_cartan:
    * Cn
    * Cn.a.b
    * non-split Cartan subgroup
gl2.normalizer_cartan:
    * normalizer of a cartan subgroup
gl2.normalizer_nonsplit_cartan:
    * Cn
    * Nn
    * Nn.a.b
    * normalizer of a non-split Cartan subgroup
gl2.normalizer_split_cartan:
    * Cs
    * Ns
    * Ns.a.b
    * Ns.a.b.c
    * normalizer of a split Cartan subgroup
gl2.open:
    * open subgroup
gl2.profinite:
    * profinite group
gl2.split_cartan:
    * Cs
    * Cs.a.b
    * split Cartan subgroup
group:
    * group
group.a_group:
    * A-group
group.abelian:
    * abelian
group.abelian_invariants:
    * Smith abelian invariants
    * primary abelian invariants
group.abelianization:
    * abelianization
group.almost_simple:
    * almost simple group
group.alternating:
    * alternating group
group.ambient:
    * ambient group
group.autjugacy_class:
    * autjugacy class
group.autjugate_subgroup:
    * autjugate
group.automorphism:
    * automorphism
group.center:
    * center
group.central:
    * central
group.centralizer:
    * centralizer
group.characteristic_subgroup:
    * characteristic subgroup
group.chevalley:
    * Chevalley groups
group.chief_series:
    * chief series
    * composition factors
group.commutator_length:
    * commutator length
group.commutator_subgroup:
    * commutator subgroup
    * commutators
    * derived subgroup
group.complete:
    * complete
group.complex_character_table:
    * complex character table
group.conjugacy_class:
    * conjugacy class
group.core:
    * c
group.coset:
    * coset
group.coxeter:
    * Coxeter graph
    * Coxeter group
    * irreducible Coxeter group
group.cyclic:
    * cyclic
group.derived_series:
    * derived length
    * derived series
group.dicyclic:
    * dicyclic group
group.dihedral:
    * dihedral group
group.direct_product:
    * direct factors
    * direct product
group.division:
    * division
    * rational conjugacy classes
group.division_maximal:
    * maximal
group.division_small_large:
    * large
    * small
group.element_order:
    * order
group.elementary:
    * elementary
group.exponent:
    * exponent of a {{KNOWL('group', 'group')}}
group.fitting_subgroup:
    * Fitting subgroup
group.frattini_subgroup:
    * Frattini subgroup
group.frobenius:
    * Frobenius group
group.fuchsian:
    * Fuchsian group
    * first kind
group.fuchsian.cusps:
    * cusps
group.fuchsian.cusps.width:
    * generators
    * width
group.fuchsian.fundamental_domain:
    * fundamental domain
group.galois.absolute:
    * absolute Galois group
group.gassmann_equivalence:
    * Gassmann equivalent
group.general_linear:
    * general linear group
    * projective general linear group
group.generalized_quaternion:
    * (generalized) quaternion group
group.generators:
    * generators
group.group_ring:
    * group ring
group.haar_measure:
    * Haar measure
    * normalized Haar measure
group.heisenberg:
    * Heisenberg group
group.homomorphism:
    * group homomorphism
group.hyperelementary:
    * hyperelementary
group.inner_automorphism:
    * inner automorphism
group.isoclinism:
    * isoclinism
group.isomorphism:
    * group isomorphism
group.label:
    * label
group.label_complex_group_char:
    * label
group.label_conjugacy_class:
    * label
group.label_rational_group_char:
    * label of a rational character
group.lower_central_series:
    * lower central series
group.maximal_quotient:
    * maximal quotient
group.maximal_subgroup:
    * maximal subgroup
group.metabelian:
    * metabelian
group.min_faithful_linear:
    * irreducible degree
    * linear degree
group.minimal_normal:
    * minimal normal subgroup
group.mobius_function:
    * möbius quotient function
    * möbius subgroup function
group.monomial:
    * M-group
    * monomial
group.nilpotent:
    * nilpotency class
    * nilpotent
group.nonsplit_product:
    * extension
    * non-split extension
    * split extension
group.normal_series:
    * normal series
    * subnormal series
group.order:
    * order
group.order_stats:
    * order statistics
group.orthogonal:
    * orthogonal group
    * projective orthogonal groups
    * special orthogonal groups
group.other_dihedral:
    * other-dihedral group
group.outer_aut:
    * outer automorphism
    * outer automorphism group
group.over_subgroup:
    * minimal over-subgroup
    * over-subgroup
group.perfect:
    * perfect
group.permutation_degree:
    * minimal permutation degree
group.permutation_module:
    * permutation module
    * permutation representation
group.permutation_representation:
    * degree
    * faithful
    * permutation representation
    * transitive
group.pgroup:
    * $p$-group
group.presentation:
    * polycyclic presentation
    * polycyclic sequence
    * polycyclic series
    * presentation
    * relative orders
group.primary_decomposition:
    * primary decomposition
group.proper_subgroup:
    * proper
group.psl2r:
    * projective special linear group
group.quotient:
    * quotient group
group.radical:
    * radical
group.rank:
    * rank
group.rational_character_table:
    * rational character table
group.rational_group:
    * rational
group.representation.center:
    * center
group.representation.character:
    * character
group.representation.complex_char_deg:
    * degree
group.representation.cyclotomic_n:
    * conductor
group.representation.faithful:
    * faithful
group.representation.image:
    * image
group.representation.irrep:
    * irreducible
    * irreps
    * reducible
    * representation
group.representation.kernel:
    * kernel
group.representation.rational_character:
    * irreducible rational characters
    * rational character
group.representation.schur_index:
    * Schur index
group.representation.type:
    * Complex
    * Quaternionic (or Symplectic)
    * Real
    * types
group.schur_multiplier:
    * Schur multiplier
group.semi_dihedral:
    * semi-dihedral group
group.semidirect_product:
    * non-split
    * semidirect factor
    * semidirect product
    * split
    * trivial semidirect product
group.simple:
    * simple
group.size_conjugacy_class:
    * size
group.sl2z:
    * modular group
group.sl2z.genus_subgroup:
    * genus
group.socle:
    * socle
group.solvable:
    * solvable
group.sp2gr:
    * integral symplectic group
group.special_linear:
    * projective special linear group
    * special linear group
group.spinor_norm:
    * spinor norm
group.sporadic:
    * sporadic groups
group.stem_extension:
    * stem extension
    * stem subgroup
group.stem_group:
    * stem group
group.subgroup:
    * subgroup
group.subgroup.centralizer:
    * centralizer
group.subgroup.complement:
    * complement
group.subgroup.diagram:
    * subgroup diagram
group.subgroup.hall:
    * Hall subgroup
group.subgroup.index:
    * index
group.subgroup.normal:
    * normal
group.subgroup.normal_closure:
    * normal closure
group.subgroup.normalizer:
    * normalizer
group.subgroup.projective_image:
    * projective image
group.supersolvable:
    * supersolvable
group.sylow_subgroup:
    * $p$-Sylow
subgroup
group.symmetric:
    * symmetric group
group.symplectic:
    * projective symplectic group
    * symplectic group
group.torsion:
    * torsion subgroup
    * torsion {{KNOWL('group', 'group')}}
group.transitive_degree:
    * minimal transitive degree
group.triangle_group:
    * Von Dyck group
    * triangle group
group.trivial_subgroup:
    * non-trivial
    * trivial subgroup
group.type:
    * Type - length
group.under_subgroup:
    * maximal under-subgroup
    * under-subgroup
group.unitary:
    * (general) unitary group
    * projective (general) unitary group
    * projective special unitary group
    * special unitary group
group.upper_central_series:
    * upper central series
group.weyl_group:
    * Weyl group
group.wreath_product:
    * transitive
    * wreath product
group.z_group:
    * Z-group
hgm.bezout_determinant:
    * Bézout determinant
hgm.bezout_matrix:
    * Bézout matrix
hgm.bezout_module:
    * Bezout module
hgm.conductor:
    * conductor
hgm.cusp_index:
    * cusp-index
hgm.defining_parameters:
    * defining parameters
hgm.degree:
    * degree
hgm.familes:
    * hypergeometric family
hgm.families:
    * hypergeometric family
hgm.good_prime:
    * bad prime
    * good prime
    * prime of bad reduction
    * prime of good reduction
hgm.hodge_vector:
    * Hodge vector
hgm.imprimitivity_index:
    * rotation number
hgm.local_discriminant:
    * local discriminant
hgm.motive:
    * Hypergeometric motives
hgm.rotation_number:
    * rotation number
hgm.signature:
    * signature
hgm.tame:
    * tame
hgm.type:
    * orthogonal
    * symplectic
    * type
hgm.weight:
    * (motivic) weight
hgm.wild:
    * wild
hgm.zigzagplot:
    * zigzag plot
    * zigzag procedure
hmsurface.arithmetic_genus:
    * arithmetic genus
hmsurface.congruence_subgroup:
    * congruence subgroup
    * level
    * principal congruence subgroup
hmsurface.elliptic_point:
    * elliptic
    * elliptic point
hmsurface.euler_number:
    * (topological) Euler number
hmsurface.hmsurface:
    * Hilbert modular surface
hmsurface.hodge_numbers:
    * Hodge numbers
hmsurface.kodaira_dimension:
    * Kodaira dimension
hmsurface.level:
    * level
hmsurface.polarization_module:
    * polarization cone
    * polarization module
intro:
    * Breadcrumbs:
    * Browsing:
    * Downloading:
    * Feedback:
    * Interesting:
    * Knowls:
    * Learn more:
    * Navigating:
    * Properties:
    * Random:
    * Related Objects:
    * Searching:
intro.features:
    * Breadcrumbs:
    * Browsing:
    * Downloading:
    * Feedback:
    * Knowls:
    * Navigating:
    * Navigation Bars:
    * Properties:
    * Related Objects:
    * Searching:
    * Zeros of L-functions Search:
lattice.automorphism_group:
    * automorphism group
lattice.class_number:
    * class number
lattice.definition:
    * integral lattice
lattice.density:
    * density
    * lattice packing problem
    * sphere packing problem
lattice.determinant:
    * determinant
lattice.dimension:
    * dimension
lattice.dual:
    * dual
lattice.genus:
    * genus
lattice.gram:
    * gram matrix
    * minkowski reduced form
lattice.group_order:
    * group order
lattice.hermite_number:
    * hermite number
lattice.isometry:
    * class
    * isometric
    * isometry class
lattice.kissing:
    * general kissing number problem
    * kissing number
    * lattice kissing number problem
lattice.level:
    * level
lattice.minimal_vector:
    * minimal vector
    * minimal vector length
lattice.normalized_minimal_vector:
    * normalized
lattice.postive_definite:
    * positive definite
lattice.primitive:
    * primitive
lattice.root_lattice:
    * root lattice
    * root system
    * roots
    * weyl group
lattice.theta:
    * theta series
lattice.unimodular:
    * unimodular
lf.associated_inertia:
    * associated inertia
lf.automorphism_group:
    * automorphism group
lf.defining_polynomial:
    * defining polynomial
lf.degree:
    * absolute degree
    * base degree
    * degree
lf.discriminant_exponent:
    * absolute discriminant exponent
    * base discriminant exponent
    * discriminant
    * discriminant exponent
lf.eisenstein_diagram:
    * $A$-points
    * $B$-points
    * $C$-points
    * $D$-point
    * $Z$-points
    * Eisenstein diagram of $I/K$
    * band
    * critical
    * index
    * negligible
lf.eisenstein_form:
    * Eisenstein form
lf.eisenstein_polynomial:
    * eisenstein
lf.family_ambiguity:
    * ambiguity
lf.family_base:
    * base field
lf.family_field_count:
    * field count
lf.family_mass:
    * absolute mass
    * absolute mass of the family
    * mass
    * mass of the family
lf.family_polynomial:
    * absolute family
    * family
    * generic polynomial
    * relative family
    * semicanonical polynomials
lf.galois_invariants:
    * Galois Mean Slope
    * Galois Splitting Model
    * Swan slope
    * inertia subgroup
    * tame degree
    * unramified degree
    * wild Artin slopes
lf.galois_mean_slope:
    * Galois mean slope
lf.galois_splitting_model:
    * Galois splitting model
lf.heights:
    * height
    * set of heights
lf.herbrand_function:
    * Herbrand function
lf.herbrand_invariant:
    * Herbrand invariant
    * arithmetic ram
    * compatible
    * geometric ram
lf.hidden_slopes:
    * Galois Artin slopes
    * Galois Swan slopes
    * hidden Artin slopes
    * hidden Swan slopes
lf.indices_of_inseparability:
    * index of inseparability
lf.inertia_group:
    * inertia group
lf.jump_set:
    * jump set
lf.local_field:
    * archimedean local field
    * local field
    * nonarchimedean local field
lf.log:
    * $p$-adic logarithm
lf.maximal_ideal:
    * maximal ideal
lf.means:
    * mean
    * means
    * slope polygon
lf.newton_polygon:
    * Newton polygon
lf.newton_slopes:
    * slopes
lf.packet:
    * packet
lf.padic_field:
    * $p$-adic field
    * local number field
lf.ramification_index:
    * absolute ramification index
    * base ramification index
    * ramification index
    * tame ramification index
    * totally ramified
    * uniformizer
    * unramified
    * wild ramification exponent
lf.ramification_polygon:
    * ramification polygon
    * ramification polynomial
lf.rams:
    * rams
    * small rams
    * tiny rams
lf.residual_polynomials:
    * equivalence class of residual polynomials
    * residual polynomial
    * residual polynomials
lf.residue_field:
    * residue field
    * residue field characteristic
lf.residue_field_degree:
    * absolute residue field degree
    * base residue field degree
    * residue field degree
lf.ring_of_integers:
    * ring of integers
lf.root_number:
    * local root number
lf.slope_content:
    * Artin slope content
    * Swan slopes
    * wild Artin slopes
lf.slopes:
    * Artin slope content
    * Artin slopes
    * Swan slope content
    * Swan slopes
    * visible Artin slopes
    * visible Swan slopes
    * wild Artin slopes
    * wild Swan slopes
lf.subfamily:
    * subfamily
lf.swan_slopes:
    * Swan slopes
lf.tame_degree:
    * Galois tame degree
    * tame degree
lf.top_slope:
    * top Artin slope
lf.unramified_degree:
    * Galois unramified degree
    * unramified degree
lf.unramified_subfield:
    * maximal unramified subextension
    * unramified subfield
lf.unramified_totally_ramified_tower:
    * canonical tower
lf.visible_slopes:
    * visible Artin slopes
    * visible Swan slopes
lf.wild_inertia_group:
    * wild inertia group
lf.wild_segments:
    * number of wild segments
lf.wild_slopes:
    * wild Artin slopes
lfunction:
    * L-function
lfunction.analytic_conductor:
    * analytic conductor
lfunction.analytic_rank:
    * analytic rank
lfunction.arithmetic:
    * arithmetic
lfunction.bad_prime:
    * bad primes
lfunction.central_character:
    * central character
lfunction.central_point:
    * central point
lfunction.central_value:
    * central value
lfunction.coefficient_field:
    * coefficient field
lfunction.completed:
    * completed L-function
lfunction.conductor:
    * conductor
lfunction.critical_line:
    * critical line
lfunction.critical_strip:
    * critical strip
lfunction.degree:
    * degree
lfunction.dirichlet:
    * Dirichlet L-function
lfunction.dirichlet_series:
    * dirichlet series
lfunction.dual:
    * dual
lfunction.euler_product:
    * Euler factors
    * Euler product
    * local factors
lfunction.functional_equation:
    * functional equation
lfunction.gamma_factor:
    * gamma factors
lfunction.infinity_factor:
    * infinity factor
lfunction.leading_coeff:
    * leading coefficient
lfunction.motivic_weight:
    * arithmetic weight
    * motivic weight
lfunction.normalization:
    * analytic normalization
    * arithmetic normalization
lfunction.rational:
    * rational
lfunction.rh:
    * riemann hypothesis
lfunction.riemann:
    * Riemann zeta-function
lfunction.riemann.euler_product:
    * euler product
lfunction.root_analytic_conductor:
    * root analytic conductor
lfunction.root_angle:
    * root angle
lfunction.root_number:
    * sign
lfunction.selberg_class:
    * Selberg class
lfunction.selberg_class.axioms:
    * selberg axioms
lfunction.selbergdata:
    * Selberg data
lfunction.self-dual:
    * self-dual
lfunction.sign:
    * root number
    * sign
lfunction.signature:
    * signature
lfunction.spectral_parameters:
    * spectral parameters
lfunction.trivial_zero:
    * trivial zeros
lfunction.zeros:
    * lowest zero
    * zeros
lfunction.zfunction:
    * Riemann-Siegel theta function
    * Z-function
mf:
    * modular form
mf.base_change:
    * b
mf.bianchi:
    * Bianchi modular form
mf.bianchi.anr:
    * analytic rank
mf.bianchi.base_change:
    * base-change
mf.bianchi.bianchigroup:
    * Bianchi group associated to
mf.bianchi.cm:
    * cm
    * complex multiplication
mf.bianchi.fourierbessell:
    * Fourier-Bessel expansion
    * K-Bessel functions
mf.bianchi.hecke_algebra:
    * Hecke algebra
    * Hecke operators
mf.bianchi.hyperbolic3space:
    * Hyperbolic 3-space
mf.bianchi.level:
    * $\mathbf{GL}_2$-levels
    * $\mathbf{SL}_2$-levels
    * level label
    * level norm
mf.bianchi.newform:
    * Bianchi newform
    * Hecke field
    * dimension
mf.bianchi.sign:
    * Fricke involution
    * sign
mf.bianchi.spaces:
    * Hecke field
    * cuspidal subspace
    * dimension
    * newform
    * newspace
    * oldforms
mf.bianchi.weight:
    * weight
mf.bianchi.weight2:
    * cuspidal
mf.cm:
    * c
mf.ellitpic.self_twist:
    * self twist
mf.half_integral_weight:
    * modular form of half-integral {{ knowl(mf.elliptic.weight,title=weight)}}
mf.half_integral_weight.dedekind_eta:
    * Dedekind eta function
mf.half_integral_weight.theta:
    * theta function
mf.hilbert:
    * Hilbert cusp form
    * Hilbert modular form
mf.hilbert.dimension:
    * dimension
mf.hilbert.level_norm:
    * level
    * level norm
mf.hilbert.weight_vector:
    * parallel weight
    * weight
mf.maass:
    * maass form
mf.maass.exceptional_eigenvalue:
    * exceptional
mf.maass.label:
    * label
mf.maass.mwf:
    * Maass form
mf.maass.mwf.coefficients:
    * coefficients
mf.maass.mwf.dimension:
    * multiplicity
mf.maass.mwf.eigenvalue:
    * eigenvalue
mf.maass.mwf.fourierexpansion:
    * Fourier expansion
mf.maass.mwf.laplacian:
    * laplace-beltrami operator
mf.maass.mwf.level:
    * level
mf.maass.mwf.spectralparameter:
    * spectral parameter
mf.maass.mwf.symmetry:
    * even
    * odd
mf.maass.mwf.weight:
    * weight
mf.maass.mwf.weight0:
    * maass form
mf.maass.picard:
    * maass form
    * picard group
mf.maass.picard.eigenvalue:
    * eigenvalue
    * spectral parameter
    * true eigenvalue
mf.maass.picard.fourierexpansion:
    * fourier expansion
mf.maass.spectral_index:
    * spectral index
mf.multipliersystem:
    * multiplier system
mf.quasi_modular:
    * quasi-modular form
mf.siegel:
    * Siegel modular form
    * scalar-valued Siegel modular form
    * vector-valued Siegel modular forms
mf.siegel.automorphic_type:
    * automorphic type
mf.siegel.character:
    * Siegel modular form with character $\psi$
mf.siegel.coefficient_field:
    * Hecke field
    * coefficient field
mf.siegel.coefficient_ring:
    * Hecke ring
    * coefficient ring
mf.siegel.cusp_form_degree2:
    * cusp form
mf.siegel.defining_polynomial:
    * defining polynomial
mf.siegel.degree:
    * degree
mf.siegel.dimension:
    * dimension
    * relative dimension
mf.siegel.family:
    * Paramodular subgroup
    * Principal congruence subgroup
    * Siegel parabolic subgroup
mf.siegel.hecke_operator:
    * Hecke algebra
    * Hecke eigenform
    * local Hecke algebra
mf.siegel.koecher.principle:
    * Koecher principle
mf.siegel.label:
    * label
mf.siegel.level:
    * level
mf.siegel.newform:
    * new subspace
    * newform
    * old
    * old subspace
mf.siegel.newspace:
    * new subspace
    * old subspace
mf.siegel.phi:
    * Siegel $\Phi$ operator
mf.siegel.slash.op:
    * slash operator
mf.siegel.weight:
    * weight
mf.siegel.weight_k_j:
    * weight
mf.slash_action:
    * weight $k$ slash-action
mf.upper_half_plane:
    * completed upper
    * upper half-plane
modcurve:
    * Complex points
    * Rational points
    * modular curve
modcurve.agreeable:
    * agreeable
    * agreeable closure
    * agreeable quotient
modcurve.canonical_field:
    * canonical field of definition
modcurve.cm_discriminants:
    * CM discriminants
    * CM points
modcurve.cusp_orbits:
    * Galois orbit
    * cusps
modcurve.cusp_widths:
    * cusps
    * width
modcurve.cusps:
    * $\Q$-cusps
    * cusps
    * rational cusps
modcurve.decomposition:
    * isogeny decomposition
modcurve.elliptic_points:
    * elliptic point
modcurve.embedded_model:
    * embedded model
modcurve.entanglement_index:
    * entanglement index
    * entanglement quotient
modcurve.fiber_product:
    * fiber product
modcurve.gassmann_class:
    * Gassmann class
modcurve.genus:
    * genus
modcurve.genus_minus_rank:
    * genus-rank difference
modcurve.gonality:
    * $K$-gonality
modcurve.index:
    * index
modcurve.j_invariant_map:
    * $\boldsymbol{j}$-invariant map
    * $\boldsymbol{j}$-map
modcurve.label:
    * label
modcurve.level:
    * level
modcurve.level_structure:
    * $H$-level structure
    * Cyclic $\boldsymbol{N}$-isogeny field degree
    * Cyclic $\boldsymbol{N}$-torsion field degree
    * N-torsion field degree
    * rational
modcurve.local_obstruction:
    * local obstruction
modcurve.minimal_twist:
    * minimal twist
    * twists
modcurve.modular_cover:
    * degree
    * kernel
    * minimal
    * modular cover
modcurve.name:
    * nonsplit Cartan
    * split Cartan
modcurve.newform_level:
    * newform level
modcurve.other_labels:
    * (CP)
    * (RSZB)
    * (RZB)
    * (S)
    * (SZ)
modcurve.point_residue_field:
    * residue field
modcurve.psl2index:
    * $\PSL_2$-index
modcurve.quadratic_refinements:
    * index 2 refinement
modcurve.rank:
    * analytic rank
modcurve.relative_index:
    * relative index
modcurve.simple:
    * simple
modcurve.sl2level:
    * $\SL_2$-level
modcurve.xn:
    * classical modular curve of level $N$
    * full modular curve of level $N$
modcurve.xns.remarks:
    * oriented necklace
modcurve.xns_plus.remarks:
    * necklace
modlgal:
    * mod-$\ell$ Galois representation
modlgal.abelian:
    * abelian
    * nonabelian
modlgal.absolutely_irreducible:
    * absolutely irreducible
modlgal.base_ring_characteristic:
    * base ring characteristic
modlgal.characteristic:
    * characteristic
modlgal.codomain:
    * codomain
modlgal.conductor:
    * conductor
modlgal.determinant:
    * determinant character
modlgal.determinant_index:
    * determinant index
modlgal.dimension:
    * Galois characters
    * dimension
modlgal.frobenius_charpoly:
    * characteristic polynomial of Frobenius
modlgal.frobenius_determinant:
    * Frobenius determinant
modlgal.frobenius_matrix:
    * Frobenius matrix
modlgal.frobenius_order:
    * Frobenius order
modlgal.frobenius_prime:
    * Frobenius prime
    * good prime
modlgal.frobenius_trace:
    * Frobenius trace
modlgal.image:
    * image
modlgal.image_abstract_group:
    * abstract image
modlgal.image_index:
    * index
modlgal.image_order:
    * image order
modlgal.min_sib_splitting_field:
    * minimal sibling of the splitting field
modlgal.projective_kernel_polynomial:
    * projective kernel polynomial
modlgal.projective_representation:
    * projective representation
modlgal.ramified:
    * ramified
    * unramified
modlgal.solvable:
    * nonsolvable
    * solvable
modlgal.splitting_field:
    * splitting field
modlgal.surjective:
    * surjective
modlgal.top_slope:
    * top Artin slope
mot.hodgevector:
    * Hodge vector
nf:
    * number field
nf.abelian:
    * abelian
nf.abs_discriminant:
    * absolute discriminant
nf.absolute_value:
    * absolute value
    * archimedean
    * equivalent
    * nonarchimedean
    * trivial absolute value
nf.arithmetically_equivalent:
    * arithmetically equivalent
nf.class_number:
    * class number
nf.class_number_formula:
    * analytic class number formula
nf.cm_field:
    * CM field
nf.complex_embedding:
    * complex embedding
nf.conductor:
    * conductor
nf.defining_polynomial:
    * defining polynomial
nf.degree:
    * degree
nf.dirichlet_group:
    * dirichlet character group
nf.discriminant:
    * discriminant
nf.discriminant_root_field:
    * discriminant root field
nf.embedding:
    * embedding
nf.frobenius_cycle_types:
    * frobenius cycle type
    * frobenius element
    * residue degree
    * unramified
nf.fundamental_units:
    * fundamental units
nf.galois_closure:
    * galois closure
nf.galois_group:
    * Galois group
nf.galois_root_discriminant:
    * Galois root discriminant
nf.generator:
    * generator
nf.ideal_class_group:
    * ideal class group
nf.ideal_labels:
    * ideal label
nf.inessential_prime:
    * inessential prime
nf.integral:
    * integral
nf.integral_basis:
    * integral basis
nf.intermediate_fields:
    * intermediate fields
nf.is_galois:
    * galois
nf.local_algebra:
    * local algebra
nf.maximal_cm_subfield:
    * maximal CM subfield
nf.minimal_polynomial:
    * minimal polynomial
nf.minimal_sibling:
    * minimal sibling
nf.monogenic:
    * monogenic
nf.monomial_order:
    * monomial order
nf.narrow_class_group:
    * narrow class group
    * strict class group
nf.narrow_class_number:
    * narrow class number
    * strict class number
nf.nickname:
    * nicknames
nf.order:
    * order
nf.padic_completion:
    * $p$-adic completion of $K$ at $\mathfrak{P}$
nf.place:
    * completion
    * complex place
    * infinite places
    * place
    * real place
nf.polredabs:
    * defining polynomial
    * reduced defining polynomial
nf.poly_discriminant:
    * discriminant
nf.prime:
    * prime
    * prime above
nf.ramified_primes:
    * ramified prime
nf.rank:
    * rank
nf.real_embedding:
    * real embedding
nf.reflex_field:
    * CM type
    * reflex field
nf.reflex_reflex_field:
    * reflex field of the reflex field
nf.regulator:
    * regulator
nf.relative_class_number:
    * relative class number
nf.ring_of_integers:
    * ring of integers
nf.root_discriminant:
    * root discriminant
nf.separable:
    * separable
nf.separable_algebra:
    * \'etale $F$-algebra
    * separable algebra
nf.serre_odlyzko_bound:
    * Serre Odlyzko bound
nf.sibling:
    * siblings
nf.signature:
    * signature
nf.stem_field:
    * stem field
    * stem fields of the polynomial
nf.torsion:
    * torsion generator
nf.totally_imaginary:
    * totally complex
    * totally imaginary
nf.totally_positive:
    * totally positive
nf.totally_real:
    * totally real
nf.unit_group:
    * unit group
nf.unramified_prime:
    * unramified (rational) prime
nf.weil_height:
    * Weil height
    * absolute logarithmic
    * logarithmic
nf.weil_polynomial:
    * Weil $q$-polynomial
nf.zk_index:
    * index of the number field
rcs:
    * completeness
    * reliability
    * source
rcs.cande.lfunction:
    * Degrees 5 to 40
    * {{KNOWL('lfunction.known_degree1','Degree 1')}}
    * {{KNOWL('lfunction.known_degree2','Degree 2')}}
    * {{KNOWL('lfunction.known_degree3','Degree 3')}}
    * {{KNOWL('lfunction.known_degree4','Degree 4')}}
rcs.cande.modcurve:
    * note that this excludes many known rational points
rcs.rigor.modcurve:
    * known issues with the rational points data
    * the absence of rational points should not be taken as an indication that none are known
    * use with caution
rcs.source.curve.highergenus.aut:
    * Corresponding Character(s)
    * Dimension of the corresponding  {{KNOWL('ag.shimura_variety', "Shimura variety")}}
    * Equations
    * Hyperelliptic or Cyclic Trigonal Curves
    * {{KNOWL('ag.jacobian', "Jacobian variety")}} decomposition
repn.highest.weight:
    * the highest weight
ring:
    * commutative ring
    * ring
    * ring without identity
    * rng
ring.a-field:
    * $A$-field
ring.associate:
    * associates
ring.characteristic:
    * characteristic
ring.dedekind_domain:
    * Dedekind domain
ring.euclidean_domain:
    * E
ring.field:
    * field
ring.field_of_fractions:
    * field of fractions
ring.fractional_ideal:
    * fractional ideal
ring.ideal:
    * homogeneous
    * ideal
ring.integral:
    * integral
    * integral closure
ring.integral_domain:
    * integral domain
ring.integrally_closed:
    * integrally closed
ring.irreducible:
    * irreducible
ring.maximal_ideal:
    * maximal
ring.noetherian:
    * noetherian
ring.prime_ideal:
    * prime
ring.principal_fractional_ideal:
    * principal fractional ideal
ring.principal_ideal_domain:
    * principal ideal domain
ring.unique_factorization_domain:
    * unique factorization domain
ring.unit:
    * unit
ring.zero_divisor:
    * zero divisor
sage.cell:
    * Sage Cell Server
shimcurve:
    * (quaternionic) Shimura curve of level $H$
    * full level $N$ Shimura curve associated to $O$
    * level $1$ Shimura curve associated to $O$
shimcurve.discb:
    * discriminant
    * ramified
    * split
shimcurve.disco:
    * discriminant
    * reduced discriminant
shimcurve.enhanced_group:
    * enhanced group (associated to $(O,\mu)$)
shimcurve.genus:
    * genus
shimcurve.gonality:
    * $K$-gonality
shimcurve.index:
    * index
shimcurve.level:
    * level
shimcurve.nrdmu:
    * polarization degree
shimcurve.order:
    * maximal
    * order
shimcurve.polarized_order:
    * polarization
    * polarized order
shimcurve.quaternion_algebra:
    * definite
    * indefinite
    * nonsplit
    * quaternion algebra
    * split
specialfunction.gamma:
    * (euler) gamma function $\gamma(z)$
specialfunction.k_bessel:
    * $k$-bessel functions
specialfunction.poincare:
    * $n$th poincar&eacute; series
st_group.ambient:
    * ambient group
st_group.component_group:
    * component group
st_group.connected:
    * connected
st_group.definition:
    * Sato-Tate group
st_group.degree:
    * degree
st_group.first_a2_moment:
    * first $a_2$ moment
st_group.fourth_trace_moment:
    * fourth trace moment
st_group.hodge_circle:
    * Hodge circle
st_group.identity_component:
    * identity component
st_group.moment_matrix:
    * diagonal
    * moment matrix
st_group.moment_simplex:
    * moment simplex
st_group.moments:
    * Moment statistics
    * moment sequence
st_group.probabilities:
    * probability
st_group.rational:
    * rational
st_group.real_dimension:
    * real dimension
st_group.second_trace_moment:
    * second trace moment
st_group.subgroups:
    * maximal subgroups
st_group.supgroups:
    * maximal
    * minimal supergroups
st_group.symplectic_form:
    * symplectic form
st_group.trace_moments:
    * moment
st_group.trace_zero_density:
    * trace zero density
st_group.usp:
    * unitary symplectic group
st_group.weight:
    * weight
stats.proportions:
    * by column
    * by row
    * none
    * vs unconstrained








$(a,b,c)$ triple:
    * belyi.abc
$\#\mathrm{Pic}$:
    * av.fq.endomorphism_ring_notation
$\#\mathrm{weak} = 1 $:
    * av.fq.endomorphism_ring_notation
$\#\mathrm{weak}$:
    * av.fq.endomorphism_ring_notation
$\boldsymbol{j}$-invariant map:
    * modcurve.j_invariant_map
$\boldsymbol{j}$-map:
    * modcurve.j_invariant_map
$\ell$-adic Galois representation:
    * av.galois_rep
    * ec.galois_rep
$\mathbf{GL}_2$-levels:
    * mf.bianchi.level
$\mathbf{SL}_2$-levels:
    * mf.bianchi.level
$\mathrm{index}$:
    * av.fq.endomorphism_ring_notation
$\bar{K}$-gonality:
    * ag.gonality_geom
$\PSL_2$-index:
    * modcurve.psl2index
$\Q$-cusps:
    * modcurve.cusps
$\SL_2$-level:
    * modcurve.sl2level
$\textbf{GL}_2$-type:
    * g2c.gl2type
$A$-field:
    * ring.a-field
$A$-points:
    * lf.eisenstein_diagram
$abc$ quality:
    * ec.q.abc_quality
$B$-points:
    * lf.eisenstein_diagram
$C$-points:
    * lf.eisenstein_diagram
$d$:
    * av.fq.lmfdb_label
$D$-point:
    * lf.eisenstein_diagram
$g$:
    * av.fq.lmfdb_label
$H$-level structure:
    * modcurve.level_structure
$i$:
    * av.fq.endomorphism_ring_notation
    * av.fq.lmfdb_label
$j$:
    * av.fq.lmfdb_label
$j$-invariant:
    * ec.j_invariant
    * ec.q.j_invariant
$k$:
    * av.fq.lmfdb_label
$k$-bessel functions:
    * specialfunction.k_bessel
$k$-gonality:
    * ag.gonality
$K$-gonality:
    * modcurve.gonality
    * shimcurve.gonality
$N :=[\mathcal{O}_{\mathbb{Q}[F]}:R]$:
    * av.fq.lmfdb_label
$n$-Selmer group:
    * ag.selmer_group
$n$th poincar&eacute; series:
    * specialfunction.poincare
$p$-adic completion of $K$ at $\mathfrak{P}$:
    * nf.padic_completion
$p$-adic field:
    * lf.padic_field
$p$-adic logarithm:
    * lf.log
$p$-adic Tate module:
    * av.tate_module
    * ec.padic_tate_module
$p$-corank:
    * av.fq.p_rank
$p$-group:
    * group.pgroup
$p$-rank:
    * av.fq.p_rank
$p$-Sylow
subgroup:
    * group.sylow_subgroup
$q$:
    * av.fq.lmfdb_label
$q$-expansion:
    * cmf.q-expansion
$w$:
    * av.fq.lmfdb_label
$Z$-points:
    * lf.eisenstein_diagram
($u_q(\mathfrak{g})$-)crystal:
    * crystals.crystal
(connected) Shimura varieties:
    * ag.shimura_variety
(CP):
    * modcurve.other_labels
(euler) gamma function $\gamma(z)$:
    * specialfunction.gamma
(general) unitary group:
    * group.unitary
(generalized) quaternion group:
    * group.generalized_quaternion
(geometric) monodromy group:
    * curve.highergenus.aut.monodromy
(motivic) weight:
    * hgm.weight
(quaternionic) Shimura curve of level $H$:
    * shimcurve
(relative) conductor:
    * av.fq.conductor
(RSZB):
    * modcurve.other_labels
(RZB):
    * modcurve.other_labels
(S):
    * modcurve.other_labels
(SZ):
    * modcurve.other_labels
(topological) Euler number:
    * hmsurface.euler_number
-curve:
    * ec.q_curve
154:
    * ec.q.manin_constant
1p3:
    * g2c.galois_rep_image
2-Selmer rank:
    * g2c.two_selmer_rank
2-torsion field:
    * g2c.two_torsion_field
2p2:
    * g2c.galois_rep_image
?:
    * g2c.galois_rep_image
\'etale $F$-algebra:
    * nf.separable_algebra
A-group:
    * group.a_group
A4:
    * ec.galois_rep_modell_image
    * gl2.exceptional
A5:
    * ec.galois_rep_modell_image
    * gl2.exceptional
abelian:
    * gg.invariants
    * group.abelian
    * modlgal.abelian
    * nf.abelian
abelian surface:
    * ag.abelian_surface
abelian variety:
    * ag.abelian_variety
abelianization:
    * group.abelianization
absolute degree:
    * lf.degree
absolute discriminant:
    * g2c.abs_discriminant
    * nf.abs_discriminant
absolute discriminant exponent:
    * lf.discriminant_exponent
absolute family:
    * lf.family_polynomial
absolute Galois group:
    * group.galois.absolute
absolute logarithmic:
    * nf.weil_height
absolute mass:
    * lf.family_mass
absolute mass of the family:
    * lf.family_mass
absolute ramification index:
    * lf.ramification_index
absolute residue field degree:
    * lf.residue_field_degree
absolute value:
    * nf.absolute_value
absolutely irreducible:
    * modlgal.absolutely_irreducible
abstract image:
    * modlgal.image_abstract_group
additive reduction:
    * ec.additive_reduction
    * ec.q.reduction_type
    * ec.reduction_type
adelic Galois representation:
    * av.galois_rep
    * ec.galois_rep
affine algebraic set:
    * ag.variety
Affine space:
    * ag.affine_space
affine variety:
    * ag.variety
agreeable:
    * modcurve.agreeable
agreeable closure:
    * modcurve.agreeable
agreeable quotient:
    * modcurve.agreeable
algebraic curve:
    * ag.curve
algebraic genus:
    * ag.curve.genus
algebraic varieties:
    * ag.variety
almost ordinary:
    * av.fq.newton_elevation
almost simple group:
    * group.almost_simple
alternating group:
    * group.alternating
ambient group:
    * group.ambient
    * st_group.ambient
ambiguity:
    * lf.family_ambiguity
analytic class number formula:
    * nf.class_number_formula
analytic conductor:
    * cmf.analytic_conductor
    * lfunction.analytic_conductor
analytic normalization:
    * lfunction.normalization
analytic order of Sha:
    * ec.analytic_sha_order
    * g2c.analytic_sha
Analytic Order of Sha:
    * ec.q.analytic_sha_order
analytic rank:
    * cmf.analytic_rank
    * ec.q.analytic_rank
    * g2c.analytic_rank
    * lfunction.analytic_rank
    * mf.bianchi.anr
    * modcurve.rank
angle corank:
    * av.fq.angle_rank
angle rank:
    * av.fq.angle_rank
archimedean:
    * nf.absolute_value
archimedean local field:
    * lf.local_field
arithmetic:
    * lfunction.arithmetic
arithmetic function:
    * af
arithmetic genus:
    * ag.arithmetic_genus
    * ag.curve.genus
    * hmsurface.arithmetic_genus
arithmetic normalization:
    * lfunction.normalization
arithmetic ram:
    * lf.herbrand_invariant
arithmetic weight:
    * lfunction.motivic_weight
arithmetically equivalent:
    * nf.arithmetically_equivalent
artin field:
    * artin.number_field
    * cmf.artin_field
Artin image:
    * cmf.artin_image
Artin representation:
    * artin
Artin slope content:
    * lf.slope_content
    * lf.slopes
Artin slopes:
    * lf.slopes
Artin stem field:
    * artin.stem_field
associated inertia:
    * lf.associated_inertia
associates:
    * ring.associate
associative:
    * alg.binary_operation.associative
Atkin-Lehner involution:
    * cmf.atkin-lehner
autjugacy class:
    * group.autjugacy_class
autjugate:
    * group.autjugate_subgroup
automorphic type:
    * mf.siegel.automorphic_type
automorphism:
    * ag.aut_group
    * av.aut_group
    * g2c.aut_grp
    * group.automorphism
automorphism group:
    * ag.aut_group
    * av.aut_group
    * g2c.aut_grp
    * lattice.automorphism_group
    * lf.automorphism_group
B:
    * ec.galois_rep_modell_image
    * gl2.borel
b:
    * mf.base_change
B.a.b:
    * gl2.borel
bad prime:
    * cmf.bad_prime
    * hgm.good_prime
bad primes:
    * lfunction.bad_prime
bad reduction:
    * ag.good_reduction
    * ec.bad_reduction
    * ec.q.reduction_type
    * g2c.good_reduction
band:
    * lf.eisenstein_diagram
base change:
    * ag.base_change
    * ec.base_change
base degree:
    * lf.degree
base discriminant exponent:
    * lf.discriminant_exponent
base field:
    * ag.base_field
    * belyi.base_field
    * lf.family_base
base ramification index:
    * lf.ramification_index
base residue field degree:
    * lf.residue_field_degree
base ring characteristic:
    * modlgal.base_ring_characteristic
base-change:
    * mf.bianchi.base_change
Bass:
    * av.fq.bass_zfv
belyi map:
    * belyi.galmap
Bernoulli numbers:
    * af.bernoulli_numbers
Bezout module:
    * hgm.bezout_module
Bianchi group associated to:
    * mf.bianchi.bianchigroup
Bianchi modular form:
    * mf.bianchi
Bianchi newform:
    * mf.bianchi.newform
bielliptic curve:
    * ag.bielliptic_curve
bielliptic involution:
    * ag.bielliptic_curve
binary operation:
    * alg.binary_operation
Birch and Swinnerton-Dyer:
    * ec.bsdconjecture
    * ec.q.bsdconjecture
Borel subgroup:
    * gl2.borel
braid equivalent:
    * curve.highergenus.aut.braid_equivalence
braid operations:
    * curve.highergenus.aut.braid_equivalence
branch points:
    * curve.highergenus.aut.branchpoints
Breadcrumbs::
    * intro
    * intro.features
Browsing::
    * intro
    * intro.features
BSD:
    * ec.bsdconjecture
BSD formula:
    * g2c.bsd_invariants
BSD invariants:
    * ec.bsdconjecture
    * g2c.bsd_invariants
by column:
    * stats.proportions
by row:
    * stats.proportions
Bézout determinant:
    * hgm.bezout_determinant
Bézout matrix:
    * hgm.bezout_matrix
c:
    * group.core
    * mf.cm
canonical field of definition:
    * modcurve.canonical_field
canonical height:
    * ag.canonical_height
    * ec.canonical_height
    * ec.q.canonical_height
canonical map:
    * ag.canonical_model
canonical model:
    * ag.canonical_model
canonical tower:
    * lf.unramified_totally_ramified_tower
Cartan subgroup:
    * gl2.cartan
center:
    * group.center
    * group.representation.center
central:
    * group.central
central character:
    * lfunction.central_character
central point:
    * lfunction.central_point
central value:
    * lfunction.central_value
centralizer:
    * group.centralizer
    * group.subgroup.centralizer
character:
    * cmf.character
    * group.representation.character
character table:
    * gg.invariants
characteristic:
    * modlgal.characteristic
    * ring.characteristic
characteristic polynomial:
    * av.fq.weil_polynomial
characteristic polynomial of Frobenius:
    * modlgal.frobenius_charpoly
characteristic subgroup:
    * group.characteristic_subgroup
Chevalley groups:
    * group.chevalley
chief series:
    * group.chief_series
class:
    * lattice.isometry
class number:
    * lattice.class_number
    * nf.class_number
classical modular curve of level $N$:
    * modcurve.xn
cluster picture:
    * ag.cluster_picture
cm:
    * mf.bianchi.cm
CM discriminant:
    * ec.complex_multiplication
CM discriminants:
    * modcurve.cm_discriminants
CM field:
    * nf.cm_field
CM points:
    * modcurve.cm_discriminants
CM type:
    * nf.reflex_field
CM-involution:
    * av.fq.conjugate_stable
Cn:
    * ec.galois_rep_modell_image
    * gl2.nonsplit_cartan
    * gl2.normalizer_nonsplit_cartan
Cn.a.b:
    * gl2.nonsplit_cartan
codomain:
    * modlgal.codomain
coefficient field:
    * cmf.coefficient_field
    * lfunction.coefficient_field
    * mf.siegel.coefficient_field
coefficient ring:
    * cmf.coefficient_ring
    * mf.siegel.coefficient_ring
coefficient ring generator bound:
    * cmf.hecke_ring_generators
coefficients:
    * mf.maass.mwf.coefficients
Cohen-Macaulay:
    * ag.cohen_macaulay_type
commutative:
    * alg.binary_operation.commutative
commutative ring:
    * ring
commutator length:
    * group.commutator_length
commutator subgroup:
    * group.commutator_subgroup
commutators:
    * group.commutator_subgroup
compatible:
    * lf.herbrand_invariant
complement:
    * group.subgroup.complement
complete:
    * group.complete
completed L-function:
    * lfunction.completed
completed upper:
    * mf.upper_half_plane
completeness:
    * rcs
completion:
    * nf.place
Complex:
    * group.representation.type
complex character table:
    * group.complex_character_table
complex embedding:
    * nf.complex_embedding
complex multiplication:
    * ag.complex_multiplication
    * cmf.cm_form
    * ec.complex_multiplication
    * g2c.end_alg
    * g2c.geom_end_alg
    * mf.bianchi.cm
complex place:
    * nf.place
Complex points:
    * modcurve
component group:
    * g2c.st_group_identity_component
    * st_group.component_group
composition factors:
    * group.chief_series
conductor:
    * ag.conductor
    * artin.conductor
    * av.fq.conductor
    * character.dirichlet.conductor
    * ec.conductor
    * ec.q.conductor
    * ec.q.lmfdb_label
    * g2c.conductor
    * group.representation.cyclotomic_n
    * hgm.conductor
    * lfunction.conductor
    * modlgal.conductor
    * nf.conductor
conductor norm:
    * ec.conductor
    * ec.invariants
congruence subgroup:
    * cmf.congruence_subgroup
    * hmsurface.congruence_subgroup
conic:
    * ag.hyperelliptic_curve
conjugacy class:
    * group.conjugacy_class
conjugate stable:
    * av.fq.conjugate_stable
connected:
    * st_group.connected
conrey (primitive) generator:
    * character.dirichlet.conrey.primitive_generator
conrey index:
    * character.dirichlet.conrey.index
contains:
    * artin.permutation_container
Conway polynomials:
    * field.finite.conway_polynomial
corresponding character(s):
    * dq.curve.highergenus.aut.source
Corresponding Character(s):
    * rcs.source.curve.highergenus.aut
coset:
    * group.coset
Coxeter graph:
    * group.coxeter
Coxeter group:
    * group.coxeter
Cremona label:
    * ec.q.cremona_label
critical:
    * lf.eisenstein_diagram
critical line:
    * lfunction.critical_line
critical strip:
    * lfunction.critical_strip
Cs:
    * ec.galois_rep_modell_image
    * gl2.normalizer_split_cartan
    * gl2.split_cartan
Cs.a.b:
    * gl2.split_cartan
cusp:
    * g2c.galois_rep_image
cusp form:
    * cmf.cusp_form
    * mf.siegel.cusp_form_degree2
cusp-index:
    * hgm.cusp_index
cuspidal:
    * ec.q.reduction_type
    * mf.bianchi.weight2
cuspidal subspace:
    * mf.bianchi.spaces
cusps:
    * group.fuchsian.cusps
    * modcurve.cusp_orbits
    * modcurve.cusp_widths
    * modcurve.cusps
cyclic:
    * ec.isogeny
    * gg.invariants
    * group.cyclic
Cyclic $\boldsymbol{N}$-isogeny field degree:
    * modcurve.level_structure
Cyclic $\boldsymbol{N}$-torsion field degree:
    * modcurve.level_structure
cyclic trigonal curve:
    * ag.cyclic_trigonal
decomposable:
    * av.fq.all_polarizations_product
decompose:
    * g2c.decomposition
Dedekind domain:
    * ring.dedekind_domain
Dedekind eta function:
    * mf.half_integral_weight.dedekind_eta
defining ideal:
    * ag.variety
defining parameters:
    * hgm.defining_parameters
defining polynomial:
    * cmf.defining_polynomial
    * lf.defining_polynomial
    * mf.siegel.defining_polynomial
    * nf.defining_polynomial
    * nf.polredabs
definite:
    * shimcurve.quaternion_algebra
degree:
    * av.polarization
    * belyi.degree
    * character.dirichlet.degree
    * ec.isogeny
    * gg.degree
    * gg.group_action_invariants
    * group.permutation_representation
    * group.representation.complex_char_deg
    * hgm.degree
    * lf.degree
    * lfunction.degree
    * mf.siegel.degree
    * modcurve.modular_cover
    * nf.degree
    * st_group.degree
degree $n$ Bézout matrix:
    * alg.bezout_matrix
Degrees 5 to 40:
    * rcs.cande.lfunction
Deligne module:
    * av.deligne_module
density:
    * lattice.density
depth:
    * ag.cluster_picture
derived length:
    * group.derived_series
derived series:
    * group.derived_series
derived subgroup:
    * group.commutator_subgroup
determinant:
    * artin.determinant
    * lattice.determinant
determinant character:
    * modlgal.determinant
determinant index:
    * modlgal.determinant_index
diagonal:
    * st_group.moment_matrix
dicyclic group:
    * group.dicyclic
dihedral group:
    * group.dihedral
dimension:
    * ag.dimension
    * artin.dimension
    * cmf.dimension
    * curve.highergenus.aut.dimension
    * lattice.dimension
    * mf.bianchi.newform
    * mf.bianchi.spaces
    * mf.hilbert.dimension
    * mf.siegel.dimension
    * modlgal.dimension
Dimension of the corresponding  {{KNOWL('ag.shimura_variety', "Shimura variety")}}:
    * rcs.source.curve.highergenus.aut
dimension of the corresponding {{knowl(ag.shimura_variety, title=shimura variety)}}:
    * dq.curve.highergenus.aut.source
direct factors:
    * group.direct_product
direct product:
    * group.direct_product
dirichlet character:
    * character.dirichlet
    * character.dirichlet.modulus
dirichlet character group:
    * nf.dirichlet_group
Dirichlet L-function:
    * lfunction.dirichlet
dirichlet series:
    * lfunction.dirichlet_series
discriminant:
    * ec.discriminant
    * ec.q.discriminant
    * g2c.discriminant
    * lf.discriminant_exponent
    * nf.discriminant
    * nf.poly_discriminant
    * shimcurve.discb
    * shimcurve.disco
discriminant exponent:
    * lf.discriminant_exponent
discriminant root field:
    * nf.discriminant_root_field
distinguishes:
    * cmf.distinguishing_primes
division:
    * group.division
divisor function:
    * af.divisor_function
do not include:
    * av.fq.initial_coefficients
Downloading::
    * intro
    * intro.features
dual:
    * cmf.dualform
    * lattice.dual
    * lfunction.dual
E:
    * ring.euclidean_domain
eigenvalue:
    * mf.maass.mwf.eigenvalue
    * mf.maass.picard.eigenvalue
eisenstein:
    * lf.eisenstein_polynomial
Eisenstein diagram of $I/K$:
    * lf.eisenstein_diagram
Eisenstein form:
    * lf.eisenstein_form
Eisenstein series:
    * cmf.eisenstein
elementary:
    * group.elementary
elevation:
    * av.fq.newton_elevation
eligible:
    * av.fq.newton_elevation
elliptic:
    * hmsurface.elliptic_point
elliptic curve:
    * ec
    * ec.ring
elliptic curve $E$ over $\mathbb{Q}$:
    * ec.q
elliptic point:
    * hmsurface.elliptic_point
    * modcurve.elliptic_points
elliptic scheme:
    * ec.scheme
elusive group:
    * gg.elusive_group
embedded model:
    * modcurve.embedded_model
embedding:
    * cmf.embedding
    * nf.embedding
endomorphism:
    * ag.endomorphism_ring
    * ec.endomorphism
endomorphism algebra:
    * ag.endomorphism_algebra
    * g2c.end_alg
endomorphism field:
    * av.endomorphism_field
endomorphism lattice:
    * g2c.jac_end_lattice
endomorphism ring:
    * ag.endomorphism_ring
    * ec.endomorphism_ring
    * ec.q.endomorphism_ring
endomorphisms:
    * ec.isogeny
enhanced group (associated to $(O,\mu)$):
    * shimcurve.enhanced_group
entanglement index:
    * modcurve.entanglement_index
entanglement quotient:
    * modcurve.entanglement_index
equations:
    * dq.curve.highergenus.aut.source
Equations:
    * rcs.source.curve.highergenus.aut
equivalence class of residual polynomials:
    * lf.residual_polynomials
equivalent:
    * nf.absolute_value
eta product:
    * cmf.eta_quotient
eta quotient:
    * cmf.eta_quotient
Euler factors:
    * lfunction.euler_product
Euler product:
    * lfunction.euler_product
euler product:
    * lfunction.riemann.euler_product
even:
    * artin.parity
    * mf.maass.mwf.symmetry
everywhere good reduction:
    * ec.good_reduction
exceptional:
    * ec.q.serre_invariants
    * mf.maass.exceptional_eigenvalue
exceptional subgroup:
    * gl2.exceptional
exponent of a {{KNOWL('group', 'group')}}:
    * group.exponent
extended Cartan subgroup:
    * gl2.cartan
extension:
    * group.nonsplit_product
faithful:
    * group.permutation_representation
    * group.representation.faithful
Faltings height:
    * ec.q.faltings_height
Faltings ratio:
    * ec.q.faltings_ratio
family:
    * lf.family_polynomial
Feedback::
    * intro
    * intro.features
fiber product:
    * modcurve.fiber_product
field:
    * ring.field
field count:
    * lf.family_field_count
field of fractions:
    * ring.field_of_fractions
field of values:
    * character.dirichlet.value_field
first $a_2$ moment:
    * st_group.first_a2_moment
first kind:
    * group.fuchsian
Fitting subgroup:
    * group.fitting_subgroup
fixed field:
    * character.dirichlet.field_cut_out
Fourier coefficients:
    * cmf.fouriercoefficients
Fourier expansion:
    * cmf.fouriercoefficients
    * mf.maass.mwf.fourierexpansion
fourier expansion:
    * mf.maass.picard.fourierexpansion
Fourier-Bessel expansion:
    * mf.bianchi.fourierbessell
fourth trace moment:
    * st_group.fourth_trace_moment
fractional ideal:
    * ring.fractional_ideal
Frattini subgroup:
    * group.frattini_subgroup
Frey curve:
    * ec.q.frey
Frey-Hellegouarch curve:
    * ec.q.frey
Fricke involution:
    * cmf.fricke
    * mf.bianchi.sign
Frobenius angles:
    * av.fq.frobenius_angles
frobenius cycle type:
    * nf.frobenius_cycle_types
Frobenius determinant:
    * modlgal.frobenius_determinant
frobenius element:
    * nf.frobenius_cycle_types
Frobenius group:
    * group.frobenius
Frobenius matrix:
    * modlgal.frobenius_matrix
Frobenius order:
    * modlgal.frobenius_order
Frobenius prime:
    * modlgal.frobenius_prime
Frobenius trace:
    * modlgal.frobenius_trace
Frobenius-Schur indicator:
    * artin.frobenius_schur_indicator
Fuchsian group:
    * group.fuchsian
full group of automorphisms:
    * curve.highergenus.aut.full
full level $N$ Shimura curve associated to $O$:
    * shimcurve
full modular curve of level $N$:
    * modcurve.xn
functional equation:
    * lfunction.functional_equation
fundamental domain:
    * group.fuchsian.fundamental_domain
fundamental units:
    * nf.fundamental_units
G:
    * ec.galois_rep_modell_image
g.q.isog:
    * av.fq.lmfdb_label
g.q.isog.N.i:
    * av.fq.lmfdb_label
g.q.isog.N.i.w:
    * av.fq.lmfdb_label
g.q.isog.N.i.w.j:
    * av.fq.lmfdb_label
g.q.isog.N.i.w.j.d.k:
    * av.fq.lmfdb_label
G2-invariants:
    * g2c.g2_invariants
galois:
    * nf.is_galois
Galois Artin slopes:
    * lf.hidden_slopes
Galois characters:
    * modlgal.dimension
galois closure:
    * nf.galois_closure
galois conjugate:
    * cmf.galois_conjugate
Galois group:
    * gg.galois_group
    * nf.galois_group
Galois Mean Slope:
    * lf.galois_invariants
Galois mean slope:
    * lf.galois_mean_slope
Galois orbit:
    * artin.galois_orbit
    * cmf.galois_orbit
    * modcurve.cusp_orbits
galois orbit:
    * character.dirichlet.galois_orbit
galois representation:
    * cmf.galois_representation
Galois root discriminant:
    * nf.galois_root_discriminant
Galois Splitting Model:
    * lf.galois_invariants
Galois splitting model:
    * lf.galois_splitting_model
Galois Swan slopes:
    * lf.hidden_slopes
Galois tame degree:
    * lf.tame_degree
Galois unramified degree:
    * lf.unramified_degree
gamma factors:
    * lfunction.gamma_factor
Gassmann class:
    * modcurve.gassmann_class
Gassmann equivalent:
    * group.gassmann_equivalence
gauss sum:
    * character.dirichlet.gauss_sum
general kissing number problem:
    * lattice.kissing
general linear group:
    * group.general_linear
generating vector:
    * curve.highergenus.aut.generatingvector
generator:
    * nf.generator
generators:
    * character.dirichlet.group.generators
    * group.fuchsian.cusps.width
    * group.generators
generic:
    * g2c.maximal_galois_rep
    * gg.generic_polynomial
generic polynomial:
    * lf.family_polynomial
genus:
    * ag.curve.genus
    * belyi.genus
    * ec.galois_rep_adelic_image
    * gl2.genus
    * group.sl2z.genus_subgroup
    * lattice.genus
    * modcurve.genus
    * shimcurve.genus
genus-rank difference:
    * modcurve.genus_minus_rank
geometric automorphism group:
    * g2c.geom_aut_grp
geometric component:
    * ag.geom_component
geometric endomorphism algebra:
    * ag.geom_endomorphism_algebra
    * g2c.geom_end_alg
geometric endomorphism ring:
    * ag.geom_endomorphism_ring
    * ec.geom_endomorphism_ring
geometric genus:
    * ag.curve.genus
geometric gonality:
    * ag.gonality_geom
geometric isomorphism class:
    * g2c.geom_iso_class
geometric ram:
    * lf.herbrand_invariant
geometrically (or absolutely) simple:
    * ag.geom_simple
geometrically irreducible:
    * ag.irreducible
geometrically simple:
    * av.geometrically_simple
geometrically squarefree:
    * av.geometrically_squarefree
geometry type:
    * belyi.geometry_type
global minimal model:
    * ec.global_minimal_model
global period:
    * ec.period
gonality:
    * ag.gonality
good prime:
    * cmf.bad_prime
    * hgm.good_prime
    * modlgal.frobenius_prime
good reduction:
    * ag.good_reduction
    * ec.good_reduction
    * ec.q.reduction_type
    * g2c.good_reduction
gram matrix:
    * lattice.gram
group:
    * group
group $G$ acts on a compact Riemann surface $X$:
    * curve.highergenus.aut.group_action
group algebra decomposition:
    * curve.highergenus.aut.groupalgebradecomp
group homomorphism:
    * group.homomorphism
group isomorphism:
    * group.isomorphism
group order:
    * lattice.group_order
group ring:
    * group.group_ring
Haar measure:
    * group.haar_measure
Hall subgroup:
    * group.subgroup.hall
Hasse diagram:
    * combin.hasse_diagram
Hasse-Weil conjecture:
    * g2c.hasse_weil_conjecture
Hecke algebra:
    * mf.bianchi.hecke_algebra
    * mf.siegel.hecke_operator
Hecke character:
    * character.hecke
Hecke characteristic polynomial:
    * cmf.heckecharpolys
Hecke eigenform:
    * mf.siegel.hecke_operator
hecke field:
    * cmf.coefficient_field
Hecke field:
    * mf.bianchi.newform
    * mf.bianchi.spaces
    * mf.siegel.coefficient_field
Hecke operator:
    * cmf.hecke_operator
Hecke operators:
    * mf.bianchi.hecke_algebra
Hecke orbit:
    * cmf.hecke_orbit
Hecke ring:
    * cmf.coefficient_ring
    * mf.siegel.coefficient_ring
height:
    * lf.heights
height pairing:
    * ag.canonical_height
    * ag.regulator
    * ec.canonical_height
    * ec.q.canonical_height
    * ec.q.regulator
    * ec.regulator
Heisenberg group:
    * group.heisenberg
Herbrand function:
    * lf.herbrand_function
Herbrand invariant:
    * lf.herbrand_invariant
hermite number:
    * lattice.hermite_number
hidden Artin slopes:
    * lf.hidden_slopes
hidden Swan slopes:
    * lf.hidden_slopes
Hilbert cusp form:
    * mf.hilbert
Hilbert modular form:
    * mf.hilbert
Hilbert modular surface:
    * hmsurface.hmsurface
Hodge circle:
    * st_group.hodge_circle
Hodge numbers:
    * hmsurface.hodge_numbers
Hodge vector:
    * hgm.hodge_vector
    * mot.hodgevector
holomorphic Euler characteristic:
    * ag.holomorphic_euler_char
homogeneous:
    * ring.ideal
homogeneous coordinates:
    * ag.projective_space
homothetic:
    * ec.q.real_period
Hyperbolic 3-space:
    * mf.bianchi.hyperbolic3space
hyperelementary:
    * group.hyperelementary
hyperelliptic curve:
    * ag.hyperelliptic_curve
hyperelliptic involution:
    * g2c.aut_grp
hyperelliptic or cyclic trigonal curves:
    * dq.curve.highergenus.aut.source
Hyperelliptic or Cyclic Trigonal Curves:
    * rcs.source.curve.highergenus.aut
hypergeometric family:
    * hgm.familes
    * hgm.families
Hypergeometric motives:
    * hgm.motive
ideal:
    * ring.ideal
ideal class group:
    * nf.ideal_class_group
ideal label:
    * nf.ideal_labels
identity:
    * alg.binary_operation.identity
identity component:
    * g2c.st_group_identity_component
    * st_group.identity_component
Igusa invariants:
    * g2c.igusa_invariants
Igusa-Clebsch invariants:
    * g2c.igusa_clebsch_invariants
image:
    * group.representation.image
    * modlgal.image
image of the Artin representation:
    * artin.gg_quotient
image order:
    * modlgal.image_order
indecomposable:
    * av.fq.all_polarizations_product
    * gg.int_modules
indefinite:
    * shimcurve.quaternion_algebra
index:
    * av.fq.index_of_order
    * av.fq.zfv_index
    * character.dirichlet.conrey.index
    * ec.galois_rep_adelic_image
    * gg.index
    * gl2.index
    * group.subgroup.index
    * lf.eisenstein_diagram
    * modcurve.index
    * modlgal.image_index
    * shimcurve.index
index 2 refinement:
    * modcurve.quadratic_refinements
index of inseparability:
    * lf.indices_of_inseparability
index of the number field:
    * nf.zk_index
induced:
    * character.dirichlet.induce
inertia group:
    * lf.inertia_group
inertia subgroup:
    * lf.galois_invariants
inessential prime:
    * nf.inessential_prime
infinite places:
    * nf.place
infinity factor:
    * lfunction.infinity_factor
inner automorphism:
    * group.inner_automorphism
inner twist count:
    * cmf.inner_twist_count
inner twists:
    * cmf.inner_twist
integral:
    * nf.integral
    * ring.integral
integral basis:
    * nf.integral_basis
integral closure:
    * ring.integral
integral domain:
    * ring.integral_domain
integral lattice:
    * lattice.definition
integral model:
    * ec.integral_model
integral points:
    * ec.q.integral_points
integral representation:
    * gg.int_modules
integral symplectic group:
    * group.sp2gr
integrally closed:
    * ring.integrally_closed
Interesting::
    * intro
intermediate fields:
    * nf.intermediate_fields
inverse:
    * alg.binary_operation.inverse
invertible:
    * av.fq.singular_dimensions
irred:
    * g2c.galois_rep_image
irreducible:
    * ag.irreducible
    * group.representation.irrep
    * ring.irreducible
irreducible Coxeter group:
    * group.coxeter
irreducible degree:
    * group.min_faithful_linear
irreducible rational characters:
    * group.representation.rational_character
irreps:
    * group.representation.irrep
isoclinism:
    * group.isoclinism
isog:
    * av.fq.lmfdb_label
isogenous:
    * av.isogeny
    * ec.isogeny
isogeny:
    * av.isogeny
    * ec.isogeny
isogeny class:
    * av.isogeny_class
    * g2c.isogeny_class
isogeny class (over a field $K$):
    * ec.isogeny_class
isogeny class degree:
    * ec.isogeny_class_degree
isogeny class index:
    * ec.q.lmfdb_label
isogeny class label:
    * ec.q.lmfdb_label
isogeny classes:
    * ec.isogeny
isogeny decomposition:
    * modcurve.decomposition
isogeny factors:
    * av.decomposition
isogeny graph:
    * ec.isogeny_graph
isogeny matrix:
    * ec.isogeny_matrix
isometric:
    * lattice.isometry
isometry class:
    * lattice.isometry
isomorphic over $k$:
    * ec.weierstrass_isomorphism
isomorphism:
    * ec.isomorphism
isomorphism class index:
    * ec.q.lmfdb_label
isomorphism classes:
    * ec.isomorphism
isotropy group:
    * cmf.eisenstein
jacobi sum:
    * character.dirichlet.jacobi_sum
jacobi symbol:
    * character.dirichlet.jacobi_symbol
Jacobian:
    * ag.jacobian
jump set:
    * lf.jump_set
K-Bessel functions:
    * mf.bianchi.fourierbessell
kernel:
    * av.polarization
    * group.representation.kernel
    * modcurve.modular_cover
kissing number:
    * lattice.kissing
kloosterman sum:
    * character.dirichlet.kloosterman_sum
Knowls::
    * intro
    * intro.features
known issues with the rational points data:
    * rcs.rigor.modcurve
known rational points:
    * g2c.known_rational_points
Kodaira dimension:
    * hmsurface.kodaira_dimension
kodaira symbol:
    * ec.kodaira_symbol
    * ec.q.kodaira_symbol
Koecher principle:
    * mf.siegel.koecher.principle
Kronecker symbol:
    * character.dirichlet.kronecker_symbol
l-function:
    * g2c.lfunction
L-function:
    * lfunction
L-polynomial:
    * av.fq.l-polynomial
l-polynomial:
    * g2c.lfunction
label:
    * av.fq.lmfdb_label
    * belyi.label
    * character.dirichlet.galois_orbit_label
    * cmf.embedding_label
    * cmf.label
    * group.label
    * group.label_complex_group_char
    * group.label_conjugacy_class
    * mf.maass.label
    * mf.siegel.label
    * modcurve.label
label of a rational character:
    * group.label_rational_group_char
laplace-beltrami operator:
    * mf.maass.mwf.laplacian
large:
    * group.division_small_large
largest:
    * cmf.maximal
lattice kissing number problem:
    * lattice.kissing
lattice packing problem:
    * lattice.density
law of quadratic reciprocity states:
    * character.dirichlet.jacobi_symbol
leading coefficient:
    * ec.special_value
    * lfunction.leading_coeff
Learn more::
    * intro
legendre symbol:
    * character.dirichlet.legendre_symbol
level:
    * cmf.congruence_subgroup
    * cmf.level
    * ec.galois_rep_adelic_image
    * gl2.level
    * hmsurface.congruence_subgroup
    * hmsurface.level
    * lattice.level
    * mf.hilbert.level_norm
    * mf.maass.mwf.level
    * mf.siegel.level
    * modcurve.level
    * shimcurve.level
level $1$ Shimura curve associated to $O$:
    * shimcurve
level label:
    * mf.bianchi.level
level norm:
    * mf.bianchi.level
    * mf.hilbert.level_norm
linear degree:
    * group.min_faithful_linear
LMFDB label:
    * ec.q.lmfdb_label
local algebra:
    * nf.local_algebra
local data:
    * ec.local_data
local discriminant:
    * hgm.local_discriminant
local factors:
    * lfunction.euler_product
local field:
    * lf.local_field
local Hecke algebra:
    * mf.siegel.hecke_operator
local invariants:
    * g2c.local_invariants
local minimal discriminant:
    * ec.local_minimal_discriminant
local minimal model:
    * ec.local_minimal_model
local number field:
    * lf.padic_field
local obstruction:
    * modcurve.local_obstruction
local root number:
    * lf.root_number
locally principal:
    * av.fq.singular_dimensions
locally solvable:
    * g2c.locally_solvable
logarithmic:
    * nf.weil_height
lower central series:
    * group.lower_central_series
lowest zero:
    * lfunction.zeros
M:
    * dq.mf.hilbert.source
M-group:
    * group.monomial
maass form:
    * mf.maass
    * mf.maass.mwf.weight0
    * mf.maass.picard
Maass form:
    * mf.maass.mwf
Malle's constant:
    * gg.malle_a
Manin constant:
    * ec.q.manin_constant
mass:
    * lf.family_mass
mass of the family:
    * lf.family_mass
maximal:
    * av.fq.maximal_zfv
    * cmf.maximal
    * ec.maximal_elladic_galois_rep
    * ec.maximal_galois_rep
    * g2c.maximal_galois_rep
    * group.division_maximal
    * ring.maximal_ideal
    * shimcurve.order
    * st_group.supgroups
maximal CM subfield:
    * nf.maximal_cm_subfield
maximal ideal:
    * lf.maximal_ideal
maximal order:
    * av.fq.order
maximal prime:
    * ec.maximal_elladic_galois_rep
maximal quotient:
    * group.maximal_quotient
maximal subgroup:
    * group.maximal_subgroup
maximal subgroups:
    * st_group.subgroups
maximal under-subgroup:
    * group.under_subgroup
maximal unramified subextension:
    * lf.unramified_subfield
mean:
    * lf.means
means:
    * lf.means
metabelian:
    * group.metabelian
minimal:
    * character.dirichlet.minimal
    * cmf.minimal
    * modcurve.modular_cover
minimal discriminant:
    * ec.minimal_discriminant
minimal discriminant norm:
    * ec.invariants
minimal equation:
    * g2c.minimal_equation
minimal field of definition:
    * ag.minimal_field
minimal normal subgroup:
    * group.minimal_normal
minimal over-subgroup:
    * group.over_subgroup
minimal permutation degree:
    * group.permutation_degree
minimal polynomial:
    * nf.minimal_polynomial
minimal quadratic twist:
    * ec.q.minimal_twist
minimal quartic twist:
    * ec.q.minimal_twist
minimal sextic twist:
    * ec.q.minimal_twist
minimal sibling:
    * nf.minimal_sibling
minimal sibling of the splitting field:
    * modlgal.min_sib_splitting_field
minimal supergroups:
    * st_group.supgroups
minimal transitive degree:
    * group.transitive_degree
minimal twist:
    * cmf.minimal_twist
    * cmf.twist_minimal
    * ec.q.minimal_twist
    * modcurve.minimal_twist
minimal vector:
    * lattice.minimal_vector
minimal vector length:
    * lattice.minimal_vector
minimal weierstrass equation:
    * ec.q.minimal_weierstrass_equation
minkowski reduced form:
    * lattice.gram
minus subspace:
    * cmf.minus_space
mod-$\ell$ Galois representation:
    * av.galois_rep
    * ec.galois_rep
    * modlgal
mod-$m$ Galois representation:
    * av.galois_rep
    * ec.galois_rep
modular cover:
    * modcurve.modular_cover
modular curve:
    * modcurve
modular degree:
    * ec.q.modular_degree
modular form:
    * cmf
    * mf
modular form of half-integral {{ knowl(mf.elliptic.weight,title=weight)}}:
    * mf.half_integral_weight
modular group:
    * group.sl2z
modular parametrization:
    * ec.q.modular_parametrization
modulus:
    * character.dirichlet
    * character.dirichlet.modulus
moment:
    * st_group.trace_moments
moment matrix:
    * st_group.moment_matrix
moment sequence:
    * st_group.moments
moment simplex:
    * st_group.moment_simplex
Moment statistics:
    * st_group.moments
monodromy group:
    * belyi.group
monogenic:
    * nf.monogenic
monomial:
    * group.monomial
monomial order:
    * nf.monomial_order
Mordell-Weil generators:
    * ec.mw_generators
    * g2c.mw_generator
Mordell-Weil group:
    * ag.mordell_weil
    * ec.mordell_weil_group
Mordell-Weil rank:
    * ag.mordell_weil
    * ec.mordell_weil_group
mordell-weil rank:
    * g2c.mordell_weil_rank
mordell-weil theorem:
    * ec.mordell_weil_theorem
motivic weight:
    * lfunction.motivic_weight
multiplicative:
    * af.multiplicative
multiplicative reduction:
    * ec.multiplicative_reduction
    * ec.q.reduction_type
    * ec.reduction_type
multiplicity:
    * cmf.inner_twist_multiplicity
    * cmf.twist_multiplicity
    * mf.maass.mwf.dimension
multiplier system:
    * mf.multipliersystem
Mumford representation:
    * g2c.mw_generator
möbius quotient function:
    * group.mobius_function
möbius subgroup function:
    * group.mobius_function
N&eacute;ron lattice:
    * ec.q.period_lattice
N-torsion field degree:
    * modcurve.level_structure
naive height:
    * ec.q.naive_height
narrow class group:
    * nf.narrow_class_group
narrow class number:
    * nf.narrow_class_number
Navigating::
    * intro
    * intro.features
Navigation Bars::
    * intro.features
necklace:
    * modcurve.xns_plus.remarks
negligible:
    * lf.eisenstein_diagram
new subspace:
    * cmf.newspace
    * cmf.subspaces
    * mf.siegel.newform
    * mf.siegel.newspace
newform:
    * cmf.newform
    * mf.bianchi.spaces
    * mf.siegel.newform
newform level:
    * modcurve.newform_level
newform orbits:
    * cmf.galois_orbit
newform subspace:
    * cmf.newform_subspace
newspace:
    * mf.bianchi.spaces
Newton polygon:
    * lf.newton_polygon
nicknames:
    * nf.nickname
nilpotency class:
    * group.nilpotent
nilpotent:
    * group.nilpotent
Nn:
    * ec.galois_rep_modell_image
    * gl2.normalizer_nonsplit_cartan
Nn.a.b:
    * gl2.normalizer_nonsplit_cartan
nodal:
    * ec.q.reduction_type
noetherian:
    * ring.noetherian
non-singular:
    * ag.singular_point
non-split:
    * ec.q.reduction_type
    * group.semidirect_product
non-split Cartan subgroup:
    * gl2.nonsplit_cartan
non-split extension:
    * group.nonsplit_product
non-split multiplicative reduction:
    * ec.nonsplit_multiplicative_reduction
    * ec.reduction_type
non-torsion generators:
    * ec.mw_generators
non-trivial:
    * group.trivial_subgroup
nonabelian:
    * modlgal.abelian
nonarchimedean:
    * nf.absolute_value
nonarchimedean local field:
    * lf.local_field
none:
    * stats.proportions
nonmaximal primes:
    * g2c.galois_rep.non_maximal_primes
nonsolvable:
    * modlgal.solvable
nonsplit:
    * shimcurve.quaternion_algebra
nonsplit Cartan:
    * modcurve.name
nontrivial:
    * cmf.nontrivial_twist
normal:
    * group.subgroup.normal
normal closure:
    * group.subgroup.normal_closure
normal series:
    * group.normal_series
normalized:
    * lattice.normalized_minimal_vector
normalized Haar measure:
    * group.haar_measure
normalizer:
    * group.subgroup.normalizer
normalizer of a cartan subgroup:
    * gl2.normalizer_cartan
normalizer of a non-split Cartan subgroup:
    * gl2.normalizer_nonsplit_cartan
normalizer of a split Cartan subgroup:
    * gl2.normalizer_split_cartan
notation:
    * av.fq.endomorphism_ring_notation
note that this excludes many known rational points:
    * rcs.cande.modcurve
Ns:
    * ec.galois_rep_modell_image
    * gl2.normalizer_split_cartan
Ns.a.b:
    * gl2.normalizer_split_cartan
Ns.a.b.c:
    * gl2.normalizer_split_cartan
nss:
    * g2c.galois_rep_image
number field:
    * av.fq.number_field
    * nf
number of Galois orbits:
    * belyi.num_orbits
number of wild segments:
    * lf.wild_segments
obstruction class:
    * ec.obstruction_class
odd:
    * artin.parity
    * mf.maass.mwf.symmetry
old:
    * cmf.oldspace
    * mf.siegel.newform
old subspace:
    * cmf.newspace
    * cmf.subspaces
    * mf.siegel.newform
    * mf.siegel.newspace
oldforms:
    * mf.bianchi.spaces
open subgroup:
    * gl2.open
optimal:
    * ec.q.optimal
orbit index:
    * character.dirichlet.galois_orbit_index
orbit size:
    * belyi.orbit_size
order:
    * av.fq.order
    * character.dirichlet.group.order
    * character.dirichlet.order
    * g2c.mw_generator_order
    * gg.invariants
    * group.element_order
    * group.order
    * nf.order
    * shimcurve.order
order statistics:
    * group.order_stats
ordinary:
    * av.fq.ordinary
    * ec.good_ordinary_reduction
    * ec.q.reduction_type
    * ec.reduction_type
ordinary reduction:
    * ec.good_ordinary_reduction
oriented necklace:
    * modcurve.xns.remarks
orthogonal:
    * hgm.type
orthogonal group:
    * group.orthogonal
other-dihedral group:
    * group.other_dihedral
outer automorphism:
    * group.outer_aut
outer automorphism group:
    * group.outer_aut
over-subgroup:
    * group.over_subgroup
overorder:
    * av.fq.order
packet:
    * lf.packet
parallel weight:
    * mf.hilbert.weight_vector
paramodular conjecture:
    * g2c.paramodular_conjecture
Paramodular subgroup:
    * mf.siegel.family
parity:
    * character.dirichlet.parity
    * gg.group_action_invariants
    * gg.parity
passport:
    * belyi.passport
perfect:
    * group.perfect
period lattice:
    * ec.q.period_lattice
permutation module:
    * group.permutation_module
permutation representation:
    * group.permutation_module
    * group.permutation_representation
permutation triple:
    * belyi.permutation_triple
Petersson scalar product:
    * cmf.petersson_scalar_product
Picard group:
    * av.fq.picard_group
picard group:
    * mf.maass.picard
place:
    * nf.place
plane model:
    * ag.plane_model
plus subspace:
    * cmf.plus_space
polarization:
    * av.polarization
    * shimcurve.polarized_order
polarization cone:
    * hmsurface.polarization_module
polarization degree:
    * shimcurve.nrdmu
polarization module:
    * hmsurface.polarization_module
polarized order:
    * shimcurve.polarized_order
polycyclic presentation:
    * group.presentation
polycyclic sequence:
    * group.presentation
polycyclic series:
    * group.presentation
positive definite:
    * lattice.postive_definite
potential complex multiplication:
    * ec.complex_multiplication
potential good reduction:
    * ag.potential_good_reduction
    * ec.potential_good_reduction
potential toric rank:
    * av.potential_toric_rank
presentation:
    * group.presentation
primary abelian invariants:
    * group.abelian_invariants
primary decomposition:
    * group.primary_decomposition
prime:
    * nf.prime
    * ring.prime_ideal
prime above:
    * nf.prime
prime of bad reduction:
    * ag.bad_prime
    * hgm.good_prime
prime of good reduction:
    * hgm.good_prime
primitive:
    * ag.primitive
    * character.dirichlet.primitive
    * ec.q.torsion_growth
    * gg.group_action_invariants
    * gg.primitive
    * lattice.primitive
principal:
    * character.dirichlet.principal
principal congruence subgroup:
    * cmf.congruence_subgroup
    * hmsurface.congruence_subgroup
Principal congruence subgroup:
    * mf.siegel.family
principal fractional ideal:
    * ring.principal_fractional_ideal
principal homogeneous space:
    * ag.torsor
principal ideal domain:
    * ring.principal_ideal_domain
principally polarizable:
    * av.princ_polarizable
probability:
    * st_group.probabilities
product abelian variety:
    * av.is_product
profinite group:
    * gl2.profinite
projective (general) unitary group:
    * group.unitary
projective algebraic set:
    * ag.variety
projective Artin field:
    * artin.projective_field
projective field:
    * cmf.projective_field
projective galois representation:
    * cmf.galois_representation
projective general linear group:
    * group.general_linear
projective image:
    * artin.projective_image
    * cmf.projective_image
    * group.subgroup.projective_image
projective kernel polynomial:
    * modlgal.projective_kernel_polynomial
projective orthogonal groups:
    * group.orthogonal
projective representation:
    * modlgal.projective_representation
Projective space:
    * ag.projective_space
projective special linear group:
    * group.psl2r
    * group.special_linear
projective special unitary group:
    * group.unitary
projective stem field:
    * artin.projective_stem_field
projective symplectic group:
    * group.symplectic
projective variety:
    * ag.variety
proper:
    * group.proper_subgroup
Properties::
    * intro
    * intro.features
quadratic twists:
    * ec.twists
quality:
    * ec.q.abc_quality
quartic twists:
    * ec.twists
quasi-modular form:
    * mf.quasi_modular
quaternion algebra:
    * shimcurve.quaternion_algebra
Quaternionic (or Symplectic):
    * group.representation.type
quaternionic multiplication:
    * g2c.geom_end_alg
quotient curve:
    * ag.quotient_curve
quotient genus:
    * curve.highergenus.aut.quotientgenus
quotient group:
    * group.quotient
radical:
    * group.radical
ramification index:
    * lf.ramification_index
ramification polygon:
    * lf.ramification_polygon
ramification polynomial:
    * lf.ramification_polygon
ramification type:
    * belyi.ramification_type
ramified:
    * artin.ramified_primes
    * modlgal.ramified
    * shimcurve.discb
ramified prime:
    * nf.ramified_primes
rams:
    * lf.rams
Random::
    * intro
rank:
    * ec.rank
    * group.rank
    * nf.rank
rational:
    * group.rational_group
    * lfunction.rational
    * modcurve.level_structure
    * st_group.rational
rational $k$-points:
    * av.fq.group_structure
rational character:
    * group.representation.rational_character
rational character table:
    * group.rational_character_table
rational conjugacy classes:
    * group.division
rational cusps:
    * modcurve.cusps
rational points:
    * g2c.all_rational_points
Rational points:
    * modcurve
real:
    * character.dirichlet.real
Real:
    * group.representation.type
real dimension:
    * st_group.real_dimension
real embedding:
    * nf.real_embedding
real endomorphism algebra:
    * ag.real_endomorphism_algebra
real geometric endomorphism algebra:
    * ag.real_geom_endomorphism_algebra
real index:
    * av.fq.zfv_real_index
real multiplication:
    * ag.real_multiplication
    * cmf.rm_form
    * g2c.end_alg
    * g2c.geom_end_alg
real period:
    * ec.q.period_lattice
    * ec.q.real_period
    * g2c.real_period
real place:
    * nf.place
reduced defining polynomial:
    * nf.polredabs
reduced discriminant:
    * shimcurve.disco
reduced minimal model:
    * ec.q.minimal_weierstrass_equation
reducible:
    * group.representation.irrep
reduction type:
    * ec.q.reduction_type
    * ec.reduction_type
refined passport:
    * curve.highergenus.aut.refinedpassport
reflex field:
    * nf.reflex_field
reflex field of the reflex field:
    * nf.reflex_reflex_field
regular:
    * gg.regular_extension
regulator:
    * ag.regulator
    * ec.q.regulator
    * ec.regulator
    * g2c.regulator
    * nf.regulator
related objects:
    * doc.related_to
Related Objects::
    * intro
    * intro.features
relative class number:
    * nf.relative_class_number
relative depth:
    * ag.cluster_picture
relative dimension:
    * cmf.dimension
    * cmf.relative_dimension
    * mf.siegel.dimension
relative discriminant:
    * av.fq.zfv_rel_disc_norm
relative family:
    * lf.family_polynomial
relative index:
    * modcurve.relative_index
relative orders:
    * group.presentation
reliability:
    * rcs
representation:
    * group.representation.irrep
residual polynomial:
    * lf.residual_polynomials
residual polynomials:
    * lf.residual_polynomials
residue degree:
    * nf.frobenius_cycle_types
residue field:
    * lf.residue_field
    * modcurve.point_residue_field
residue field characteristic:
    * lf.residue_field
residue field degree:
    * lf.residue_field_degree
resolvent fields:
    * gg.group_action_invariants
resolvents:
    * gg.resolvents
riemann hypothesis:
    * lfunction.rh
Riemann surface:
    * ag.riemann_surface
Riemann zeta-function:
    * lfunction.riemann
Riemann-Siegel theta function:
    * lfunction.zfunction
ring:
    * ring
ring of integers:
    * lf.ring_of_integers
    * nf.ring_of_integers
ring without identity:
    * ring
rng:
    * ring
root analytic conductor:
    * lfunction.root_analytic_conductor
root angle:
    * lfunction.root_angle
root discriminant:
    * nf.root_discriminant
root lattice:
    * lattice.root_lattice
root number:
    * artin.root_number
    * lfunction.sign
root system:
    * lattice.root_lattice
roots:
    * lattice.root_lattice
rotation number:
    * hgm.imprimitivity_index
    * hgm.rotation_number
RSZB label:
    * gl2.label
S:
    * cmf.sturm_bound_gamma1
S4:
    * ec.galois_rep_modell_image
    * gl2.exceptional
Sage Cell Server:
    * sage.cell
Satake angles:
    * cmf.satake_angles
Satake parameters:
    * cmf.satake_parameters
sato-tate group:
    * cmf.sato_tate
Sato-Tate group:
    * g2c.st_group
    * st_group.definition
scalar-valued Siegel modular form:
    * mf.siegel
Schur index:
    * group.representation.schur_index
Schur multiplier:
    * group.schur_multiplier
Searching::
    * intro
    * intro.features
second trace moment:
    * st_group.second_trace_moment
selberg axioms:
    * lfunction.selberg_class.axioms
Selberg class:
    * lfunction.selberg_class
Selberg data:
    * lfunction.selbergdata
self dual:
    * cmf.selfdual
self twist:
    * mf.ellitpic.self_twist
self-dual:
    * lfunction.self-dual
self-twist:
    * cmf.self_twist
semi-dihedral group:
    * group.semi_dihedral
semi-global minimal models:
    * ec.semi_global_minimal_model
semiabelian variety:
    * av.semiabelian_variety
semicanonical polynomials:
    * lf.family_polynomial
semidirect factor:
    * group.semidirect_product
semidirect product:
    * group.semidirect_product
semistable:
    * ec.q.semistable
    * ec.semistable
separable:
    * nf.separable
separable algebra:
    * nf.separable_algebra
Serre conductor:
    * ec.q.serre_invariants
Serre invariants:
    * ec.q.serre_invariants
Serre Odlyzko bound:
    * nf.serre_odlyzko_bound
Serre weight:
    * ec.q.serre_invariants
set of heights:
    * lf.heights
sextic twists:
    * ec.twists
shimura correspondence:
    * cmf.shimura_correspondence
short Weierstrass model:
    * ec.simple_equation
siblings:
    * gg.other_representations
    * nf.sibling
Siegel $\Phi$ operator:
    * mf.siegel.phi
Siegel modular form:
    * mf.siegel
Siegel modular form with character $\psi$:
    * mf.siegel.character
Siegel parabolic subgroup:
    * mf.siegel.family
sign:
    * artin.root_number
    * lfunction.root_number
    * lfunction.sign
    * mf.bianchi.sign
signature:
    * curve.highergenus.aut.signature
    * hgm.signature
    * lfunction.signature
    * nf.signature
simple:
    * ag.simple
    * av.simple
    * group.simple
    * modcurve.simple
simplified equation:
    * ec.simple_equation
    * g2c.simple_equation
singular:
    * ag.plane_model
singular primes:
    * av.fq.singular_primes
singular support:
    * av.fq.singular_primes
size:
    * ag.cluster_picture
    * group.size_conjugacy_class
slash operator:
    * mf.siegel.slash.op
slope polygon:
    * lf.means
slopes:
    * lf.newton_slopes
small:
    * group.division_small_large
small rams:
    * lf.rams
Smith abelian invariants:
    * group.abelian_invariants
smooth:
    * ag.curve.smooth
    * ag.plane_model
socle:
    * group.socle
solvable:
    * gg.invariants
    * group.solvable
    * modlgal.solvable
source:
    * rcs
space:
    * cmf.space
special linear group:
    * group.special_linear
special orthogonal groups:
    * group.orthogonal
special unitary group:
    * group.unitary
special value:
    * ec.q.special_value
    * ec.special_value
spectral index:
    * mf.maass.spectral_index
spectral parameter:
    * mf.maass.mwf.spectralparameter
    * mf.maass.picard.eigenvalue
spectral parameters:
    * lfunction.spectral_parameters
sphere packing problem:
    * lattice.density
spinor norm:
    * group.spinor_norm
split:
    * ec.q.reduction_type
    * g2c.decomposition
    * group.semidirect_product
    * shimcurve.discb
    * shimcurve.quaternion_algebra
split Cartan:
    * modcurve.name
split Cartan subgroup:
    * gl2.split_cartan
split extension:
    * group.nonsplit_product
split multiplicative reduction:
    * ec.reduction_type
    * ec.split_multiplicative_reduction
splitting field:
    * ag.splitting_field
    * modlgal.splitting_field
sporadic groups:
    * group.sporadic
squarefree:
    * av.squarefree
stable Faltings height:
    * ec.q.faltings_height
standard generators:
    * curve.highergenus.aut.generators
Stark unit:
    * cmf.stark_unit
stem extension:
    * group.stem_extension
stem field:
    * nf.stem_field
stem fields of the polynomial:
    * nf.stem_field
stem group:
    * group.stem_group
stem subgroup:
    * group.stem_extension
strict class group:
    * nf.narrow_class_group
strict class number:
    * nf.narrow_class_number
structure:
    * character.dirichlet.group.structure
Sturm bound:
    * cmf.sturm_bound
subfamily:
    * lf.subfamily
subfields:
    * gg.subfields
subgroup:
    * group.subgroup
subgroup diagram:
    * group.subgroup.diagram
subnormal series:
    * gg.subnormal_series
    * group.normal_series
supersingular:
    * av.fq.supersingular
    * ec.good_supersingular_reduction
    * ec.q.reduction_type
    * ec.reduction_type
supersingular reduction:
    * ec.good_supersingular_reduction
supersolvable:
    * group.supersolvable
surjective:
    * modlgal.surjective
Swan slope:
    * lf.galois_invariants
Swan slope content:
    * lf.slopes
Swan slopes:
    * lf.slope_content
    * lf.slopes
    * lf.swan_slopes
symmetric:
    * av.theta_divisor
symmetric bilinear form:
    * alg.symmetric_bilinear_form
symmetric group:
    * group.symmetric
symplectic:
    * hgm.type
symplectic form:
    * st_group.symplectic_form
symplectic group:
    * group.symplectic
symplectic isomorphism:
    * alg.symplectic_isomorphism
Szpiro ratio:
    * ec.q.szpiro_ratio
tamagawa number:
    * ec.tamagawa_number
Tamagawa number:
    * g2c.tamagawa
tamagawa product:
    * ec.tamagawa_number
Tamagawa product:
    * g2c.tamagawa
tame:
    * hgm.tame
tame degree:
    * lf.galois_invariants
    * lf.tame_degree
tame ramification index:
    * lf.ramification_index
Tate-Shafarevic group:
    * ec.q.analytic_sha_order
Tate-Shafarevich group:
    * ag.tate_shafarevich
    * ec.analytic_sha_order
the:
    * ec.q.real_period
the absence of rational points should not be taken as an indication that none are known:
    * rcs.rigor.modcurve
the highest weight:
    * repn.highest.weight
the identity element:
    * alg.binary_operation.identity
theta divisor:
    * av.theta_divisor
theta function:
    * mf.half_integral_weight.theta
theta series:
    * lattice.theta
tiny rams:
    * lf.rams
top Artin slope:
    * lf.top_slope
    * modlgal.top_slope
topologically equivalent:
    * curve.highergenus.aut.topological_equivalence
torsion generator:
    * nf.torsion
torsion generators:
    * ec.mw_generators
torsion growth:
    * ec.q.torsion_growth
torsion order:
    * ec.torsion_order
    * g2c.torsion_order
torsion primes:
    * g2c.torsion_order
torsion structure:
    * ec.torsion_subgroup
torsion subgroup:
    * ag.mordell_weil
    * ec.q.torsion_subgroup
    * ec.torsion_subgroup
    * g2c.torsion
    * group.torsion
torsion {{KNOWL('group', 'group')}}:
    * group.torsion
torsor:
    * ag.torsor
totally complex:
    * nf.totally_imaginary
totally imaginary:
    * nf.totally_imaginary
totally positive:
    * nf.totally_positive
totally ramified:
    * lf.ramification_index
totally real:
    * nf.totally_real
trace bound:
    * cmf.trace_bound
trace form:
    * cmf.space_trace_form
    * cmf.trace_form
trace zero density:
    * st_group.trace_zero_density
transitive:
    * belyi.permutation_triple
    * group.permutation_representation
    * group.wreath_product
triangle group:
    * group.triangle_group
trigonal automorphism:
    * ag.cyclic_trigonal
trivial:
    * character.dirichlet.principal
trivial absolute value:
    * nf.absolute_value
trivial semidirect product:
    * group.semidirect_product
trivial subgroup:
    * group.trivial_subgroup
trivial zeros:
    * lfunction.trivial_zero
true eigenvalue:
    * mf.maass.picard.eigenvalue
twist:
    * av.twist
    * cmf.twist
    * ec.twists
twist class:
    * cmf.twist
twist equivalent:
    * cmf.twist
twist minimal:
    * cmf.twist_minimal
twists:
    * modcurve.minimal_twist
type:
    * hgm.type
Type - length:
    * group.type
types:
    * cmf.projective_image
    * group.representation.type
under-subgroup:
    * group.under_subgroup
underlying unit group:
    * character.unit_group
uniformizer:
    * lf.ramification_index
unimodular:
    * lattice.unimodular
unique factorization domain:
    * ring.unique_factorization_domain
unit:
    * ring.unit
unit group:
    * nf.unit_group
unitary symplectic group:
    * st_group.usp
unramified:
    * artin.unramified_primes
    * lf.ramification_index
    * modlgal.ramified
    * nf.frobenius_cycle_types
unramified (rational) prime:
    * nf.unramified_prime
unramified degree:
    * lf.galois_invariants
    * lf.unramified_degree
unramified subfield:
    * lf.unramified_subfield
upper central series:
    * group.upper_central_series
upper half-plane:
    * mf.upper_half_plane
use with caution:
    * rcs.rigor.modcurve
vector-valued Siegel modular forms:
    * mf.siegel
visible Artin slopes:
    * lf.slopes
    * lf.visible_slopes
visible Swan slopes:
    * lf.slopes
    * lf.visible_slopes
Von Dyck group:
    * group.triangle_group
vs unconstrained:
    * stats.proportions
weak equivalence class:
    * av.fq.weak_equivalence_class
weakly equivalent:
    * av.weak_equivalence_class
Weierstrass coefficients:
    * ec.weierstrass_coeffs
Weierstrass equation:
    * ec.weierstrass_coeffs
    * g2c.g2curve
weierstrass isomorphisms:
    * ec.weierstrass_isomorphism
Weierstrass model:
    * ag.hyperelliptic_curve
    * ec.weierstrass_coeffs
Weierstrass points:
    * g2c.num_rat_wpts
weight:
    * cmf.weight
    * mf.bianchi.weight
    * mf.hilbert.weight_vector
    * mf.maass.mwf.weight
    * mf.siegel.weight
    * mf.siegel.weight_k_j
    * st_group.weight
weight $k$ slash-action:
    * mf.slash_action
Weil $q$-polynomial:
    * nf.weil_polynomial
Weil height:
    * nf.weil_height
Weil polynomial:
    * av.fq.weil_polynomial
Weyl group:
    * group.weyl_group
weyl group:
    * lattice.root_lattice
width:
    * group.fuchsian.cusps.width
    * modcurve.cusp_widths
wild:
    * hgm.wild
wild Artin slopes:
    * lf.galois_invariants
    * lf.slope_content
    * lf.slopes
    * lf.wild_slopes
wild inertia group:
    * lf.wild_inertia_group
wild ramification exponent:
    * lf.ramification_index
wild Swan slopes:
    * lf.slopes
wreath product:
    * group.wreath_product
Z-function:
    * lfunction.zfunction
Z-group:
    * group.z_group
zero divisor:
    * ring.zero_divisor
zeros:
    * lfunction.zeros
Zeros of L-functions Search::
    * intro.features
zigzag plot:
    * hgm.zigzagplot
zigzag procedure:
    * hgm.zigzagplot
{{ knowl(mf.elliptic.newform, title=newform) }}:
    * cmf.decomposition.new.gamma0chi
{{KNOWL('ag.jacobian', "Jacobian variety")}} decomposition:
    * rcs.source.curve.highergenus.aut
{{KNOWL('ec.mordell_weil_group', 'Mordell-Weil group')}}:
    * ec.mw_generators
{{KNOWL('ec.potential_good_reduction','potential good reduction')}}:
    * ec.reduction
{{KNOWL('ec.semistable','semistable')}}:
    * ec.reduction
{{KNOWL('lfunction.known_degree1','Degree 1')}}:
    * rcs.cande.lfunction
{{KNOWL('lfunction.known_degree2','Degree 2')}}:
    * rcs.cande.lfunction
{{KNOWL('lfunction.known_degree3','Degree 3')}}:
    * rcs.cande.lfunction
{{KNOWL('lfunction.known_degree4','Degree 4')}}:
    * rcs.cande.lfunction
{{knowl(ag.jacobian, title=jacobian variety)}} decomposition:
    * dq.curve.highergenus.aut.source
étale algebra:
    * av.fq.order
